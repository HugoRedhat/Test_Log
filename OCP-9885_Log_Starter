Using the default, devel and _devel profiles...
Feature: templates.feature

waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
  # @author yuwei@redhat.com
  # @case_id OCP-9885
  Scenario: Check online installed templates[90m # ./features/online/templates.feature:271[0m
      [36m[33m[09:44:48] INFO> === Before Scenario: Check online installed templates ===[0m[0m
      [36m[33m[09:44:48] INFO> Shell Commands: mkdir -v -p '/home/hugongai/workdir/dhcp-137-194-hugongai'[0m[0m
      [36mmkdir: created directory '/home/hugongai/workdir/dhcp-137-194-hugongai'[0m
      [36m[0m[0m
      [36m[33m[09:44:48] INFO> Exit Status: 0[0m[0m
      [36m[33m[09:44:48] INFO> === End Before Scenario: Check online installed templates ===[0m[0m
    [32mWhen I run the :[32m[1mget[0m[0m[32m client command with:[90m # features/step_definitions/cli.rb:13[0m[0m
      [36m[33m[09:44:48] INFO> HTTP GET https://api.free-int.openshift.com:443[0m[0m
      [36m[33m[09:44:49] INFO> HTTP GET took 1.045 sec: 200 OK | application/json 3947 bytes[0m
      [36m[0m[0m
      [36m[33m[09:44:49] INFO> REST get_user for user 'CucuShift::APIAccessor:@free_int', base_opts: {:options=>{:oapi_version=>"v1", :api_version=>"v1", :accept=>"application/json", :content_type=>"application/json", :oauth_token=>"NPPPauGSH-SaD78JXv9YSgZkLfpN62Fo9X1eGzR7dW8"}, :base_url=>"https://api.free-int.openshift.com:443", :headers=>{"Accept"=>"<accept>", "Content-Type"=>"<content_type>", "Authorization"=>"Bearer <oauth_token>"}}, opts: {:username=>"~"}[0m[0m
      [36m[33m[09:44:49] INFO> HTTP GET https://api.free-int.openshift.com:443/oapi/v1/users/~[0m[0m
      [36m[33m[09:44:50] INFO> HTTP GET took 1.066 sec: 200 OK | application/json 669 bytes[0m
      [36m[0m[0m
      [36m[33m[09:44:50] INFO> cleaning-up user int1-yuwei-freeint001 projects[0m[0m
      [36m[33m[09:44:50] INFO> Shell Commands: rm  -f -- /home/hugongai/workdir/dhcp-137-194-hugongai/free_int_int1-yuwei-freeint001.kubeconfig[0m[0m
      [36m[0m[0m
      [36m[33m[09:44:50] INFO> Exit Status: 0[0m[0m
      [36m[33m[09:44:50] INFO> Shell Commands: oc version --config=/tmp/kubeconfig20180524-18342-1hl4h9d[0m[0m
      [36moc v3.9.29[0m
      [36mkubernetes v1.9.1+a0ce1bc657[0m
      [36mfeatures: Basic-Auth GSSAPI Kerberos SPNEGO[0m
      [36m[0m[0m
      [36m[33m[09:44:50] INFO> Exit Status: 0[0m[0m
      [36m[33m[09:44:50] INFO> Shell Commands: oc login --token=NPPPauGSH-SaD78JXv9YSgZkLfpN62Fo9X1eGzR7dW8 --server=https://api.free-int.openshift.com:443 --config=/home/hugongai/workdir/dhcp-137-194-hugongai/free_int_int1-yuwei-freeint001.kubeconfig --insecure-skip-tls-verify=true[0m[0m
      [36mLogged into "https://api.free-int.openshift.com:443" as "int1-yuwei-freeint001" using the token provided.[0m
      [36m[0m
      [36mYou don't have any projects. You can try to create a new project, by running[0m
      [36m[0m
      [36m    oc new-project <projectname>[0m
      [36m[0m
      [36m[0m[0m
      [36m[33m[09:44:54] INFO> Exit Status: 0[0m[0m
      [36m[33m[09:45:06] INFO> Shell Commands: oc get template --config=/home/hugongai/workdir/dhcp-137-194-hugongai/free_int_int1-yuwei-freeint001.kubeconfig -n openshift[0m[0m
      [36mNAME                                      DESCRIPTION                                                                        PARAMETERS        OBJECTS[0m
      [36m3scale-gateway                            3scale's APIcast is an NGINX based API gateway used to integrate your interna...   15 (6 blank)      2[0m
      [36mcakephp-mysql-persistent                  An example CakePHP application with a MySQL database. For more information ab...   20 (4 blank)      9[0m
      [36mdancer-mysql-persistent                   An example Dancer application with a MySQL database. For more information abo...   17 (5 blank)      9[0m
      [36mdjango-psql-persistent                    An example Django application with a PostgreSQL database. For more informatio...   20 (5 blank)      9[0m
      [36mjenkins-persistent                        Jenkins service, with persistent storage....                                       8 (all set)       7[0m
      [36mjws31-tomcat7-https-s2i                   An example JBoss Web Server application configured for use with https. For mo...   17 (5 blank)      7[0m
      [36mjws31-tomcat8-https-s2i                   An example JBoss Web Server application. For more information about using thi...   17 (5 blank)      7[0m
      [36mjws31-tomcat8-mongodb-persistent-s2i      An example JBoss Web Server application with a MongoDB database. For more inf...   30 (12 blank)     10[0m
      [36mjws31-tomcat8-mysql-persistent-s2i        An example JBoss Web Server application with a MySQL database. For more infor...   31 (13 blank)     10[0m
      [36mjws31-tomcat8-postgresql-persistent-s2i   Application template for JWS PostgreSQL applications with persistent storage...    28 (10 blank)     10[0m
      [36mlaravel-mysql-persistent                  An example Laravel application with a MySQL database. For more information ab...   22 (4 blank)      9[0m
      [36mmariadb-persistent                        MariaDB database service, with persistent storage. For more information about...   9 (3 generated)   4[0m
      [36mmongodb-persistent                        MongoDB database service, with persistent storage. For more information about...   9 (3 generated)   4[0m
      [36mmysql-persistent                          MySQL database service, with persistent storage. For more information about u...   9 (3 generated)   4[0m
      [36mnodejs-mongo-persistent                   An example Node.js application with a MongoDB database. For more information...    19 (4 blank)      9[0m
      [36mopenjdk18-web-basic-s2i                   An example Java application using OpenJDK 8. For more information about using...   8 (1 blank)       5[0m
      [36mpostgresql-persistent                     PostgreSQL database service, with persistent storage. For more information ab...   8 (2 generated)   4[0m
      [36mrails-pgsql-persistent                    An example Rails application with a PostgreSQL database. For more information...   21 (4 blank)      9[0m
      [36mredis-ephemeral                           Redis in-memory data structure store, without persistent storage. For more in...   5 (1 generated)   3[0m
      [36mredis-persistent                          Redis in-memory data structure store, with persistent storage. For more infor...   6 (1 generated)   4[0m
      [36mrhdm70-kieserver-https-s2i                Application template for Red Hat Decision Manager Execution Server 7.0 applic...   29 (8 blank)      7[0m
      [36msso72-x509-https                          An example RH-SSO 7 application. For more information about using this templa...   12 (6 blank)      6[0m
      [36m[0m[0m
      [36m[33m[09:45:11] INFO> Exit Status: 0[0m[0m
      | [36mresource[0m[0m |[0m [36mtemplate [0m[0m |[0m
      | [36mn       [0m[0m |[0m [36mopenshift[0m[0m |[0m
    [32mThen the step should [32m[1msucceed[0m[0m[32m[90m             # features/step_definitions/common.rb:4[0m[0m
    [32mAnd [32m[1mthe[0m[0m[32m output should [32m[1mcontain[0m[0m[32m:[90m           # features/step_definitions/common.rb:33[0m[0m
      | [36m3scale-gateway                         [0m[0m |[0m
      | [36mcakephp-mysql-persistent               [0m[0m |[0m
      | [36mdancer-mysql-persistent                [0m[0m |[0m
      | [36mdjango-psql-persistent                 [0m[0m |[0m
      | [36mjenkins-persistent                     [0m[0m |[0m
      | [36mjws31-tomcat7-https-s2i                [0m[0m |[0m
      | [36mjws31-tomcat8-https-s2i                [0m[0m |[0m
      | [36mjws31-tomcat8-mongodb-persistent-s2i   [0m[0m |[0m
      | [36mjws31-tomcat8-mysql-persistent-s2i     [0m[0m |[0m
      | [36mjws31-tomcat8-postgresql-persistent-s2i[0m[0m |[0m
      | [36mlaravel-mysql-persistent               [0m[0m |[0m
      | [36mmariadb-persistent                     [0m[0m |[0m
      | [36mmongodb-persistent                     [0m[0m |[0m
      | [36mmysql-persistent                       [0m[0m |[0m
      | [36mnodejs-mongo-persistent                [0m[0m |[0m
      | [36mopenjdk18-web-basic-s2i                [0m[0m |[0m
      | [36mpostgresql-persistent                  [0m[0m |[0m
      | [36mrails-pgsql-persistent                 [0m[0m |[0m
      | [36mredis-ephemeral                        [0m[0m |[0m
      | [36mredis-persistent                       [0m[0m |[0m
      | [36mrhdm70-kieserver-https-s2i             [0m[0m |[0m
      | [36msso72-x509-https                       [0m[0m |[0m
waiting for operation up to 3600 seconds..
    [32mWhen I run the :[32m[1mget[0m[0m[32m client command with:[90m # features/step_definitions/cli.rb:13[0m[0m
      [36m[33m[09:45:11] INFO> Shell Commands: oc get template -o yaml --config=/home/hugongai/workdir/dhcp-137-194-hugongai/free_int_int1-yuwei-freeint001.kubeconfig -n openshift[0m[0m
      [36mapiVersion: v1[0m
      [36mitems:[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: '3scale''s APIcast is an NGINX based API gateway used to integrate[0m
      [36m        your internal and external  API services with 3scale''s API Management Platform.[0m
      [36m        It supports OpenID connect to integrate  with external Identity Providers[0m
      [36m        such as Red Hat Single Sign On, for API traffic authentication '[0m
      [36m      iconClass: icon-3scale[0m
      [36m      openshift.io/display-name: 3scale APIcast API Gateway[0m
      [36m      openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_3scale/2.saas/html/deployment_options/apicast-openshift[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: api,gateway,3scale[0m
      [36m    creationTimestamp: 2018-04-03T15:33:57Z[0m
      [36m    name: 3scale-gateway[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782369"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/3scale-gateway[0m
      [36m    uid: 6c9e0ed4-3754-11e8-937f-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      name: ${APICAST_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentconfig: ${APICAST_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Rolling[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            deploymentconfig: ${APICAST_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: THREESCALE_PORTAL_ENDPOINT[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: password[0m
      [36m                  name: ${CONFIGURATION_URL_SECRET}[0m
      [36m            - name: THREESCALE_CONFIG_FILE[0m
      [36m              value: ${CONFIGURATION_FILE_PATH}[0m
      [36m            - name: THREESCALE_DEPLOYMENT_ENV[0m
      [36m              value: ${DEPLOYMENT_ENVIRONMENT}[0m
      [36m            - name: RESOLVER[0m
      [36m              value: ${RESOLVER}[0m
      [36m            - name: APICAST_SERVICES[0m
      [36m              value: ${SERVICES_LIST}[0m
      [36m            - name: APICAST_CONFIGURATION_LOADER[0m
      [36m              value: ${CONFIGURATION_LOADER}[0m
      [36m            - name: APICAST_LOG_LEVEL[0m
      [36m              value: ${LOG_LEVEL}[0m
      [36m            - name: APICAST_PATH_ROUTING_ENABLED[0m
      [36m              value: ${PATH_ROUTING}[0m
      [36m            - name: APICAST_RESPONSE_CODES[0m
      [36m              value: ${RESPONSE_CODES}[0m
      [36m            - name: APICAST_CONFIGURATION_CACHE[0m
      [36m              value: ${CONFIGURATION_CACHE}[0m
      [36m            - name: REDIS_URL[0m
      [36m              value: ${REDIS_URL}[0m
      [36m            - name: APICAST_MANAGEMENT_API[0m
      [36m              value: ${MANAGEMENT_API}[0m
      [36m            - name: OPENSSL_VERIFY[0m
      [36m              value: ${OPENSSL_VERIFY}[0m
      [36m            image: apicast-gateway:${AMP_RELEASE}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /status/live[0m
      [36m                port: management[0m
      [36m              initialDelaySeconds: 10[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: ${APICAST_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m              name: proxy[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8090[0m
      [36m              name: management[0m
      [36m              protocol: TCP[0m
      [36m              resources:[0m
      [36m                limits:[0m
      [36m                  cpu: "1"[0m
      [36m                  memory: 128Mi[0m
      [36m                requests:[0m
      [36m                  cpu: 500m[0m
      [36m                  memory: 64Mi[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /status/ready[0m
      [36m                port: management[0m
      [36m              initialDelaySeconds: 15[0m
      [36m              timeoutSeconds: 1[0m
      [36m      triggers:[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      name: ${APICAST_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: proxy[0m
      [36m        port: 8080[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 8080[0m
      [36m      - name: management[0m
      [36m        port: 8090[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 8090[0m
      [36m      selector:[0m
      [36m        deploymentconfig: ${APICAST_NAME}[0m
      [36m  parameters:[0m
      [36m  - description: AMP release tag.[0m
      [36m    name: AMP_RELEASE[0m
      [36m    required: true[0m
      [36m    value: 2.0.1.GA[0m
      [36m  - description: Name of the secret containing the THREESCALE_PORTAL_ENDPOINT with[0m
      [36m      the access-token or provider key[0m
      [36m    name: CONFIGURATION_URL_SECRET[0m
      [36m    required: true[0m
      [36m    value: apicast-configuration-url-secret[0m
      [36m  - description: Path to saved JSON file with configuration for the gateway. Has to[0m
      [36m      be injected to the docker image as read only volume.[0m
      [36m    name: CONFIGURATION_FILE_PATH[0m
      [36m  - description: Deployment environment. Can be sandbox or production.[0m
      [36m    name: DEPLOYMENT_ENVIRONMENT[0m
      [36m    required: true[0m
      [36m    value: production[0m
      [36m  - description: Name for the 3scale API Gateway[0m
      [36m    name: APICAST_NAME[0m
      [36m    required: true[0m
      [36m    value: apicast[0m
      [36m  - description: DNS Resolver for openresty, if empty it will be autodiscovered[0m
      [36m    name: RESOLVER[0m
      [36m  - description: Subset of services to run. Use comma separated list of service ids[0m
      [36m      (eg. 42,1337)[0m
      [36m    name: SERVICES_LIST[0m
      [36m  - description: 'When to load configuration. If on gateway start or incoming request.[0m
      [36m      Allowed values are: lazy, boot.'[0m
      [36m    name: CONFIGURATION_LOADER[0m
      [36m    value: boot[0m
      [36m  - description: 'Log level. One of the following: debug, info, notice, warn, error,[0m
      [36m      crit, alert, or emerg.'[0m
      [36m    name: LOG_LEVEL[0m
      [36m  - description: Enable path routing. Experimental feature.[0m
      [36m    name: PATH_ROUTING[0m
      [36m    value: "false"[0m
      [36m  - description: Enable logging response codes to 3scale.[0m
      [36m    name: RESPONSE_CODES[0m
      [36m    value: "false"[0m
      [36m  - description: For how long to cache the downloaded configuration in seconds. Can[0m
      [36m      be left empty, 0 or greater than 60.[0m
      [36m    name: CONFIGURATION_CACHE[0m
      [36m  - description: 'Redis URL. Required for OAuth2 integration. ex: redis://PASSWORD@127.0.0.1:6379/0'[0m
      [36m    name: REDIS_URL[0m
      [36m  - description: Scope of the Management API. Can be disabled, status or debug. At[0m
      [36m      least status required for health checks.[0m
      [36m    name: MANAGEMENT_API[0m
      [36m    value: status[0m
      [36m  - description: Turn on/off the OpenSSL peer verification. Can be set to true/false.[0m
      [36m    name: OPENSSL_VERIFY[0m
      [36m    required: true[0m
      [36m    value: "false"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    app: cakephp-mysql-persistent[0m
      [36m    template: cakephp-mysql-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/openshift/cake-ex/blob/master/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example CakePHP application with a MySQL database. For more[0m
      [36m        information about using this template, including OpenShift considerations,[0m
      [36m        see https://github.com/openshift/cakephp-ex/blob/master/README.md.[0m
      [36m      iconClass: icon-php[0m
      [36m      openshift.io/display-name: CakePHP + MySQL[0m
      [36m      openshift.io/documentation-url: https://github.com/openshift/cakephp-ex[0m
      [36m      openshift.io/long-description: This template defines resources needed to develop[0m
      [36m        a CakePHP application, including a build configuration, application deployment[0m
      [36m        configuration, and database deployment configuration.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: quickstart,php,cakephp[0m
      [36m      template.openshift.io/bindable: "false"[0m
      [36m    creationTimestamp: 2018-05-23T16:21:34Z[0m
      [36m    name: cakephp-mysql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898451"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/cakephp-mysql-persistent[0m
      [36m    uid: 5c201db4-5ea5-11e8-868f-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      cakephp-secret-token: ${CAKEPHP_SECRET_TOKEN}[0m
      [36m      cakephp-security-salt: ${CAKEPHP_SECURITY_SALT}[0m
      [36m      database-password: ${DATABASE_PASSWORD}[0m
      [36m      database-user: ${DATABASE_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      postCommit:[0m
      [36m        script: ./vendor/bin/phpunit[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: COMPOSER_MIRROR[0m
      [36m            value: ${COMPOSER_MIRROR}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: php:${PHP_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        recreateParams:[0m
      [36m          pre:[0m
      [36m            execNewPod:[0m
      [36m              command:[0m
      [36m              - ./migrate-database.sh[0m
      [36m              containerName: cakephp-mysql-persistent[0m
      [36m            failurePolicy: Retry[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DATABASE_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: DATABASE_ENGINE[0m
      [36m              value: ${DATABASE_ENGINE}[0m
      [36m            - name: DATABASE_NAME[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: DATABASE_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: DATABASE_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: CAKEPHP_SECRET_TOKEN[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: cakephp-secret-token[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: CAKEPHP_SECURITY_SALT[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: cakephp-security-salt[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: OPCACHE_REVALIDATE_FREQ[0m
      [36m              value: ${OPCACHE_REVALIDATE_FREQ}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health.php[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              periodSeconds: 60[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: cakephp-mysql-persistent[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health.php[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              periodSeconds: 60[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - cakephp-mysql-persistent[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mysql[0m
      [36m        port: 3306[0m
      [36m        targetPort: 3306[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mysql[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}[0m
      [36m                  -D ${DATABASE_NAME} -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_MYSQL_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mysql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mysql:5.7[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: cakephp-mysql-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Version of PHP image to be used (5.6, 7.0, 7.1 or latest).[0m
      [36m    displayName: PHP Version[0m
      [36m    name: PHP_VERSION[0m
      [36m    required: true[0m
      [36m    value: "7.1"[0m
      [36m  - description: Maximum amount of memory the CakePHP container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the MySQL container can use.[0m
      [36m    displayName: Memory Limit (MySQL)[0m
      [36m    name: MEMORY_MYSQL_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/openshift/cakephp-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the CakePHP service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: Github trigger secret.  A difficult to guess string encoded as part[0m
      [36m      of the webhook URL.  Not encrypted.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mysql[0m
      [36m  - description: 'Database engine: postgresql, mysql or sqlite (default).'[0m
      [36m    displayName: Database Engine[0m
      [36m    name: DATABASE_ENGINE[0m
      [36m    required: true[0m
      [36m    value: mysql[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: default[0m
      [36m  - displayName: Database User[0m
      [36m    name: DATABASE_USER[0m
      [36m    required: true[0m
      [36m    value: cakephp[0m
      [36m  - displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - description: Set this to a long random string.[0m
      [36m    displayName: CakePHP secret token[0m
      [36m    from: '[\w]{50}'[0m
      [36m    generate: expression[0m
      [36m    name: CAKEPHP_SECRET_TOKEN[0m
      [36m  - description: Security salt for session hash.[0m
      [36m    displayName: CakePHP Security Salt[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: CAKEPHP_SECURITY_SALT[0m
      [36m  - description: How often to check script timestamps for updates, in seconds. 0 will[0m
      [36m      result in OPcache checking for updates on every request.[0m
      [36m    displayName: OPcache Revalidation Frequency[0m
      [36m    name: OPCACHE_REVALIDATE_FREQ[0m
      [36m    value: "2"[0m
      [36m  - description: The custom Composer mirror URL[0m
      [36m    displayName: Custom Composer Mirror URL[0m
      [36m    name: COMPOSER_MIRROR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    app: dancer-mysql-persistent[0m
      [36m    template: dancer-mysql-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Dancer application with a MySQL database. For more information[0m
      [36m        about using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.[0m
      [36m      iconClass: icon-perl[0m
      [36m      openshift.io/display-name: Dancer + MySQL[0m
      [36m      openshift.io/documentation-url: https://github.com/openshift/dancer-ex[0m
      [36m      openshift.io/long-description: This template defines resources needed to develop[0m
      [36m        a Dancer based application, including a build configuration, application deployment[0m
      [36m        configuration, and database deployment configuration.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: quickstart,perl,dancer[0m
      [36m      template.openshift.io/bindable: "false"[0m
      [36m    creationTimestamp: 2018-04-03T15:34:00Z[0m
      [36m    name: dancer-mysql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782371"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/dancer-mysql-persistent[0m
      [36m    uid: 6e52a6b0-3754-11e8-b5b4-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      database-password: ${DATABASE_PASSWORD}[0m
      [36m      database-user: ${DATABASE_USER}[0m
      [36m      keybase: ${SECRET_KEY_BASE}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      postCommit:[0m
      [36m        script: perl -I extlib/lib/perl5 -I lib t/*[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: CPAN_MIRROR[0m
      [36m            value: ${CPAN_MIRROR}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: perl:5.24[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DATABASE_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: SECRET_KEY_BASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: keybase[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: PERL_APACHE2_RELOAD[0m
      [36m              value: ${PERL_APACHE2_RELOAD}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: dancer-mysql-persistent[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - dancer-mysql-persistent[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mysql[0m
      [36m        port: 3306[0m
      [36m        targetPort: 3306[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mysql[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}[0m
      [36m                  -D ${DATABASE_NAME} -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_MYSQL_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mysql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mysql:5.7[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: dancer-mysql-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maximum amount of memory the Perl Dancer container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the MySQL container can use.[0m
      [36m    displayName: Memory Limit (MySQL)[0m
      [36m    name: MEMORY_MYSQL_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/openshift/dancer-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the Dancer service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: Github trigger secret.  A difficult to guess string encoded as part[0m
      [36m      of the webhook URL.  Not encrypted.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: database[0m
      [36m  - displayName: Database Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_USER[0m
      [36m  - displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Set this to "true" to enable automatic reloading of modified Perl[0m
      [36m      modules.[0m
      [36m    displayName: Perl Module Reload[0m
      [36m    name: PERL_APACHE2_RELOAD[0m
      [36m  - description: Your secret key for verifying the integrity of signed cookies.[0m
      [36m    displayName: Secret Key[0m
      [36m    from: '[a-z0-9]{127}'[0m
      [36m    generate: expression[0m
      [36m    name: SECRET_KEY_BASE[0m
      [36m  - description: The custom CPAN mirror URL[0m
      [36m    displayName: Custom CPAN Mirror URL[0m
      [36m    name: CPAN_MIRROR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    app: django-psql-persistent[0m
      [36m    template: django-psql-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Django application with a PostgreSQL database. For more[0m
      [36m        information about using this template, including OpenShift considerations,[0m
      [36m        see https://github.com/openshift/django-ex/blob/master/README.md.[0m
      [36m      iconClass: icon-python[0m
      [36m      openshift.io/display-name: Django + PostgreSQL[0m
      [36m      openshift.io/documentation-url: https://github.com/openshift/django-ex[0m
      [36m      openshift.io/long-description: This template defines resources needed to develop[0m
      [36m        a Django based application, including a build configuration, application deployment[0m
      [36m        configuration, and database deployment configuration.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: quickstart,python,django[0m
      [36m      template.openshift.io/bindable: "false"[0m
      [36m    creationTimestamp: 2018-05-23T16:21:34Z[0m
      [36m    name: django-psql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898455"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/django-psql-persistent[0m
      [36m    uid: 5c72f151-5ea5-11e8-bbcf-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      database-password: ${DATABASE_PASSWORD}[0m
      [36m      database-user: ${DATABASE_USER}[0m
      [36m      django-secret-key: ${DJANGO_SECRET_KEY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      postCommit:[0m
      [36m        script: ./manage.py test[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: PIP_INDEX_URL[0m
      [36m            value: ${PIP_INDEX_URL}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: python:${PYTHON_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DATABASE_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: DATABASE_ENGINE[0m
      [36m              value: ${DATABASE_ENGINE}[0m
      [36m            - name: DATABASE_NAME[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: DATABASE_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: DATABASE_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: APP_CONFIG[0m
      [36m              value: ${APP_CONFIG}[0m
      [36m            - name: DJANGO_SECRET_KEY[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: django-secret-key[0m
      [36m                  name: ${NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: django-psql-persistent[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - django-psql-persistent[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: postgresql[0m
      [36m        port: 5432[0m
      [36m        targetPort: 5432[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: POSTGRESQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m                - --live[0m
      [36m              initialDelaySeconds: 120[0m
      [36m              timeoutSeconds: 10[0m
      [36m            name: postgresql[0m
      [36m            ports:[0m
      [36m            - containerPort: 5432[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_POSTGRESQL_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/pgsql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - postgresql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: postgresql:${POSTGRESQL_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: django-psql-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Version of Python image to be used (3.4, 3.5, 3.6 or latest).[0m
      [36m    displayName: Version of Python Image[0m
      [36m    name: PYTHON_VERSION[0m
      [36m    required: true[0m
      [36m    value: "3.6"[0m
      [36m  - description: Version of PostgreSQL image to be used (9.4, 9.5, 9.6 or latest).[0m
      [36m    displayName: Version of PostgreSQL Image[0m
      [36m    name: POSTGRESQL_VERSION[0m
      [36m    required: true[0m
      [36m    value: "9.6"[0m
      [36m  - description: Maximum amount of memory the Django container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the PostgreSQL container can use.[0m
      [36m    displayName: Memory Limit (PostgreSQL)[0m
      [36m    name: MEMORY_POSTGRESQL_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/openshift/django-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the Django service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: Github trigger secret.  A difficult to guess string encoded as part[0m
      [36m      of the webhook URL.  Not encrypted.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: postgresql[0m
      [36m  - description: 'Database engine: postgresql, mysql or sqlite (default).'[0m
      [36m    displayName: Database Engine[0m
      [36m    name: DATABASE_ENGINE[0m
      [36m    required: true[0m
      [36m    value: postgresql[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: default[0m
      [36m  - displayName: Database Username[0m
      [36m    name: DATABASE_USER[0m
      [36m    required: true[0m
      [36m    value: django[0m
      [36m  - displayName: Database User Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - description: Relative path to Gunicorn configuration file (optional).[0m
      [36m    displayName: Application Configuration File Path[0m
      [36m    name: APP_CONFIG[0m
      [36m  - description: Set this to a long random string.[0m
      [36m    displayName: Django Secret Key[0m
      [36m    from: '[\w]{50}'[0m
      [36m    generate: expression[0m
      [36m    name: DJANGO_SECRET_KEY[0m
      [36m  - description: The custom PyPi index URL[0m
      [36m    displayName: Custom PyPi Index URL[0m
      [36m    name: PIP_INDEX_URL[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    app: jenkins-persistent[0m
      [36m    template: jenkins-persistent-template[0m
      [36m  message: A Jenkins service has been created in your project.  Log into Jenkins with[0m
      [36m    your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md[0m
      [36m    contains more information about using this template.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        Jenkins service, with persistent storage.[0m
      [36m[0m
      [36m        NOTE: You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-jenkins[0m
      [36m      openshift.io/display-name: Jenkins[0m
      [36m      openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/other_images/jenkins.html[0m
      [36m      openshift.io/long-description: This template deploys a Jenkins server capable[0m
      [36m        of managing OpenShift Pipeline builds and supporting OpenShift-based oauth[0m
      [36m        login.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: instant-app,jenkins[0m
      [36m    creationTimestamp: 2018-05-23T16:21:35Z[0m
      [36m    name: jenkins-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898457"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jenkins-persistent[0m
      [36m    uid: 5ca8520f-5ea5-11e8-826c-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        haproxy.router.openshift.io/timeout: 4m[0m
      [36m        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      tls:[0m
      [36m        insecureEdgeTerminationPolicy: Redirect[0m
      [36m        termination: edge[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${JENKINS_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${JENKINS_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${JENKINS_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - capabilities: {}[0m
      [36m            env:[0m
      [36m            - name: OPENSHIFT_ENABLE_OAUTH[0m
      [36m              value: ${ENABLE_OAUTH}[0m
      [36m            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT[0m
      [36m              value: "true"[0m
      [36m            - name: DISABLE_ADMINISTRATIVE_MONITORS[0m
      [36m              value: ${DISABLE_ADMINISTRATIVE_MONITORS}[0m
      [36m            - name: KUBERNETES_MASTER[0m
      [36m              value: https://kubernetes.default:443[0m
      [36m            - name: KUBERNETES_TRUST_CERTIFICATES[0m
      [36m              value: "true"[0m
      [36m            - name: JENKINS_SERVICE_NAME[0m
      [36m              value: ${JENKINS_SERVICE_NAME}[0m
      [36m            - name: JNLP_SERVICE_NAME[0m
      [36m              value: ${JNLP_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              failureThreshold: 2[0m
      [36m              httpGet:[0m
      [36m                path: /login[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 420[0m
      [36m              periodSeconds: 360[0m
      [36m              timeoutSeconds: 240[0m
      [36m            name: jenkins[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /login[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 240[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            securityContext:[0m
      [36m              capabilities: {}[0m
      [36m              privileged: false[0m
      [36m            terminationMessagePath: /dev/termination-log[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/jenkins[0m
      [36m              name: ${JENKINS_SERVICE_NAME}-data[0m
      [36m          dnsPolicy: ClusterFirst[0m
      [36m          restartPolicy: Always[0m
      [36m          serviceAccountName: ${JENKINS_SERVICE_NAME}[0m
      [36m          volumes:[0m
      [36m          - name: ${JENKINS_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${JENKINS_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - jenkins[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${JENKINS_IMAGE_STREAM_TAG}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m          lastTriggeredImage: ""[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ServiceAccount[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    groupNames: null[0m
      [36m    kind: RoleBinding[0m
      [36m    metadata:[0m
      [36m      name: ${JENKINS_SERVICE_NAME}_edit[0m
      [36m    roleRef:[0m
      [36m      name: edit[0m
      [36m    subjects:[0m
      [36m    - kind: ServiceAccount[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      name: ${JNLP_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: agent[0m
      [36m        nodePort: 0[0m
      [36m        port: 50000[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 50000[0m
      [36m      selector:[0m
      [36m        name: ${JENKINS_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",[0m
      [36m          "namespace": "", "kind": "Service"}]'[0m
      [36m        service.openshift.io/infrastructure: "true"[0m
      [36m      name: ${JENKINS_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        nodePort: 0[0m
      [36m        port: 80[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${JENKINS_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m  parameters:[0m
      [36m  - description: The name of the OpenShift Service exposed for the Jenkins container.[0m
      [36m    displayName: Jenkins Service Name[0m
      [36m    name: JENKINS_SERVICE_NAME[0m
      [36m    value: jenkins[0m
      [36m  - description: The name of the service used for master/slave communication.[0m
      [36m    displayName: Jenkins JNLP Service Name[0m
      [36m    name: JNLP_SERVICE_NAME[0m
      [36m    value: jenkins-jnlp[0m
      [36m  - description: Whether to enable OAuth OpenShift integration. If false, the static[0m
      [36m      account 'admin' will be initialized with the password 'password'.[0m
      [36m    displayName: Enable OAuth in Jenkins[0m
      [36m    name: ENABLE_OAUTH[0m
      [36m    value: "true"[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The OpenShift Namespace where the Jenkins ImageStream resides.[0m
      [36m    displayName: Jenkins ImageStream Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: Whether to perform memory intensive, possibly slow, synchronization[0m
      [36m      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor[0m
      [36m      and site warnings monitor are disabled.[0m
      [36m    displayName: Disable memory intensive administrative monitors[0m
      [36m    name: DISABLE_ADMINISTRATIVE_MONITORS[0m
      [36m    value: "false"[0m
      [36m  - description: Name of the ImageStreamTag to be used for the Jenkins image.[0m
      [36m    displayName: Jenkins ImageStreamTag[0m
      [36m    name: JENKINS_IMAGE_STREAM_TAG[0m
      [36m    value: jenkins:2[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: jws31-tomcat7-https-s2i[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new JWS application for Apache Tomcat 7 has been created in your project.[0m
      [36m    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.[0m
      [36m    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the[0m
      [36m    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example JBoss Web Server application configured for use with[0m
      [36m        https. For more information about using this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-rh-tomcat[0m
      [36m      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 7 (with https)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: tomcat,tomcat7,java,jboss,hidden[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 7 based application,[0m
      [36m        including a build configuration, and application deployment configuration.[0m
      [36m        This also illustrations how to connect to the web applicaiton using https.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:32Z[0m
      [36m    name: jws31-tomcat7-https-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898440"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat7-https-s2i[0m
      [36m    uid: 5b1471eb-5ea5-11e8-826c-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: jboss-webserver31-tomcat7-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_DIR[0m
      [36m              value: /etc/jws-secret-volume[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_KEY}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}[0m
      [36m            - name: JWS_ADMIN_USERNAME[0m
      [36m              value: ${JWS_ADMIN_USERNAME}[0m
      [36m            - name: JWS_ADMIN_PASSWORD[0m
      [36m              value: ${JWS_ADMIN_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}[0m
      [36m                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'[0m
      [36m                  |grep -iq 'stateName *= *STARTED'[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/jws-secret-volume[0m
      [36m              name: jws-certificate-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: jws-certificate-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${JWS_HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: jws-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom https Route Hostname[0m
      [36m    name: HOSTNAME_HTTPS[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts.git[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: "1.2"[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: tomcat-websocket-chat[0m
      [36m  - description: The name of the secret containing the certificate files[0m
      [36m    displayName: Secret Name[0m
      [36m    name: JWS_HTTPS_SECRET[0m
      [36m    required: true[0m
      [36m    value: jws-app-secret[0m
      [36m  - description: The name of the certificate file within the secret[0m
      [36m    displayName: Certificate Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE[0m
      [36m    value: server.crt[0m
      [36m  - description: The name of the certificate key file within the secret[0m
      [36m    displayName: Certificate Key Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m    value: server.key[0m
      [36m  - description: The certificate password[0m
      [36m    displayName: Certificate Password[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m  - description: JWS Admin User[0m
      [36m    displayName: JWS Admin Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin Password[0m
      [36m    displayName: JWS Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: jws31-tomcat8-https-s2i[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new JWS application for Apache Tomcat 8 has been created in your project.[0m
      [36m    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.[0m
      [36m    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the[0m
      [36m    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example JBoss Web Server application. For more information about[0m
      [36m        using this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-rh-tomcat[0m
      [36m      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 (with https)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: tomcat,tomcat8,java,jboss,hidden[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 8 based application,[0m
      [36m        including a build configuration, application deployment configuration, and[0m
      [36m        secure communication using https.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:32Z[0m
      [36m    name: jws31-tomcat8-https-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898443"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat8-https-s2i[0m
      [36m    uid: 5b4ed12b-5ea5-11e8-868f-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: jboss-webserver31-tomcat8-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_DIR[0m
      [36m              value: /etc/jws-secret-volume[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_KEY}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}[0m
      [36m            - name: JWS_ADMIN_USERNAME[0m
      [36m              value: ${JWS_ADMIN_USERNAME}[0m
      [36m            - name: JWS_ADMIN_PASSWORD[0m
      [36m              value: ${JWS_ADMIN_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}[0m
      [36m                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'[0m
      [36m                  |grep -iq 'stateName *= *STARTED'[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/jws-secret-volume[0m
      [36m              name: jws-certificate-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: jws-certificate-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${JWS_HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: jws-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom https Route Hostname[0m
      [36m    name: HOSTNAME_HTTPS[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts.git[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: "1.2"[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: tomcat-websocket-chat[0m
      [36m  - description: The name of the secret containing the certificate files[0m
      [36m    displayName: Secret Name[0m
      [36m    name: JWS_HTTPS_SECRET[0m
      [36m    required: true[0m
      [36m    value: jws-app-secret[0m
      [36m  - description: The name of the certificate file within the secret[0m
      [36m    displayName: Certificate Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE[0m
      [36m    value: server.crt[0m
      [36m  - description: The name of the certificate key file within the secret[0m
      [36m    displayName: Certificate Key Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m    value: server.key[0m
      [36m  - description: The certificate password[0m
      [36m    displayName: Certificate Password[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m  - description: JWS Admin User[0m
      [36m    displayName: JWS Admin Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin Password[0m
      [36m    displayName: JWS Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: jws31-tomcat8-mongodb-persistent-s2i[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new persistent JWS application for Apache Tomcat 8 (using MongoDB) has[0m
      [36m    been created in your project. The username/password for administering your JWS[0m
      [36m    is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MongoDB database[0m
      [36m    "${DB_DATABASE}" use the credentials ${DB_USERNAME}/${DB_PASSWORD} (Admin password[0m
      [36m    is "${DB_ADMIN_PASSWORD}"). Please be sure to create the secret named "${JWS_HTTPS_SECRET}"[0m
      [36m    containing the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example JBoss Web Server application with a MongoDB database.[0m
      [36m        For more information about using this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-rh-tomcat[0m
      [36m      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 + MongoDB (with[0m
      [36m        https)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: tomcat,tomcat8,java,jboss[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 8 based application,[0m
      [36m        including a build configuration, application deployment configuration, database[0m
      [36m        deployment configuration for MongoDB using persistence and secure communication[0m
      [36m        using https.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:33Z[0m
      [36m    name: jws31-tomcat8-mongodb-persistent-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898445"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat8-mongodb-persistent-s2i[0m
      [36m    uid: 5b8a0139-5ea5-11e8-868f-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mongodb",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mongodb",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The database server's port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mongodb[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 27017[0m
      [36m        targetPort: 27017[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-mongodb[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: jboss-webserver31-tomcat8-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DB_SERVICE_PREFIX_MAPPING[0m
      [36m              value: ${APPLICATION_NAME}-mongodb=DB[0m
      [36m            - name: DB_JNDI[0m
      [36m              value: ${DB_JNDI}[0m
      [36m            - name: DB_USERNAME[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: DB_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: DB_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: DB_ADMIN_PASSWORD[0m
      [36m              value: ${DB_ADMIN_PASSWORD}[0m
      [36m            - name: DB_MIN_POOL_SIZE[0m
      [36m              value: ${DB_MIN_POOL_SIZE}[0m
      [36m            - name: DB_MAX_POOL_SIZE[0m
      [36m              value: ${DB_MAX_POOL_SIZE}[0m
      [36m            - name: DB_TX_ISOLATION[0m
      [36m              value: ${DB_TX_ISOLATION}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_DIR[0m
      [36m              value: /etc/jws-secret-volume[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_KEY}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}[0m
      [36m            - name: JWS_ADMIN_USERNAME[0m
      [36m              value: ${JWS_ADMIN_USERNAME}[0m
      [36m            - name: JWS_ADMIN_PASSWORD[0m
      [36m              value: ${JWS_ADMIN_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}[0m
      [36m                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'[0m
      [36m                  |grep -iq 'stateName *= *STARTED'[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/jws-secret-volume[0m
      [36m              name: jws-certificate-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: jws-certificate-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${JWS_HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mongodb[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-mongodb[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}-mongodb[0m
      [36m          name: ${APPLICATION_NAME}-mongodb[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MONGODB_USER[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: MONGODB_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: MONGODB_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: MONGODB_ADMIN_PASSWORD[0m
      [36m              value: ${DB_ADMIN_PASSWORD}[0m
      [36m            - name: MONGODB_NOPREALLOC[0m
      [36m              value: ${MONGODB_NOPREALLOC}[0m
      [36m            - name: MONGODB_SMALLFILES[0m
      [36m              value: ${MONGODB_SMALLFILES}[0m
      [36m            - name: MONGODB_QUIET[0m
      [36m              value: ${MONGODB_QUIET}[0m
      [36m            image: mongodb[0m
      [36m            imagePullPolicy: Always[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 27017[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: ${APPLICATION_NAME}-mongodb[0m
      [36m            ports:[0m
      [36m            - containerPort: 27017[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD[0m
      [36m                  --eval="quit()"[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 1[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mongodb/data[0m
      [36m              name: ${APPLICATION_NAME}-mongodb-pvol[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: ${APPLICATION_NAME}-mongodb-pvol[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${APPLICATION_NAME}-mongodb-claim[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}-mongodb[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mongodb:${MONGODB_IMAGE_STREAM_TAG}[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mongodb-claim[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: jws-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom https Route Hostname[0m
      [36m    name: HOSTNAME_HTTPS[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: "1.2"[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: todolist/todolist-mongodb[0m
      [36m  - description: Database JNDI name used by application to resolve the datasource,[0m
      [36m      e.g. java:/jboss/datasources/mongodb[0m
      [36m    displayName: Database JNDI Name[0m
      [36m    name: DB_JNDI[0m
      [36m  - description: Database name[0m
      [36m    displayName: Database Name[0m
      [36m    name: DB_DATABASE[0m
      [36m    required: true[0m
      [36m    value: root[0m
      [36m  - description: Size of persistent storage for database volume.[0m
      [36m    displayName: Database Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The name of the secret containing the certificate files[0m
      [36m    displayName: Secret Name[0m
      [36m    name: JWS_HTTPS_SECRET[0m
      [36m    required: true[0m
      [36m    value: jws-app-secret[0m
      [36m  - description: The name of the certificate file within the secret[0m
      [36m    displayName: Certificate Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE[0m
      [36m    value: server.crt[0m
      [36m  - description: The name of the certificate key file within the secret[0m
      [36m    displayName: Certificate Key Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m    value: server.key[0m
      [36m  - description: The certificate password[0m
      [36m    displayName: Certificate Password[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m  - description: Sets xa-pool/min-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Minimum Pool Size[0m
      [36m    name: DB_MIN_POOL_SIZE[0m
      [36m  - description: Sets xa-pool/max-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Maximum Pool Size[0m
      [36m    name: DB_MAX_POOL_SIZE[0m
      [36m  - description: Sets transaction-isolation for the configured datasource.[0m
      [36m    displayName: Datasource Transaction Isolation[0m
      [36m    name: DB_TX_ISOLATION[0m
      [36m  - description: Disable data file preallocation.[0m
      [36m    displayName: MongoDB No Preallocation[0m
      [36m    name: MONGODB_NOPREALLOC[0m
      [36m  - description: Set MongoDB to use a smaller default data file size.[0m
      [36m    displayName: MongoDB Small Files[0m
      [36m    name: MONGODB_SMALLFILES[0m
      [36m  - description: Runs MongoDB in a quiet mode that attempts to limit the amount of[0m
      [36m      output.[0m
      [36m    displayName: MongoDB Quiet[0m
      [36m    name: MONGODB_QUIET[0m
      [36m  - description: Database user name[0m
      [36m    displayName: Database Username[0m
      [36m    from: user[a-zA-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DB_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: Database user password[0m
      [36m    displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DB_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Database admin password[0m
      [36m    displayName: Database admin password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DB_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin User[0m
      [36m    displayName: JWS Admin Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin Password[0m
      [36m    displayName: JWS Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m  - description: The tag to use for the "mongodb" image stream.  Typically, this aligns[0m
      [36m      with the major.minor version of MongoDB.[0m
      [36m    displayName: MongoDB Image Stream Tag[0m
      [36m    name: MONGODB_IMAGE_STREAM_TAG[0m
      [36m    required: true[0m
      [36m    value: "3.2"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: jws31-tomcat8-mysql-persistent-s2i[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new persistent JWS application for Apache Tomcat 8 (using MySQL) has[0m
      [36m    been created in your project. The username/password for administering your JWS[0m
      [36m    is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MySQL database[0m
      [36m    "${DB_DATABASE}" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please be[0m
      [36m    sure to create the secret named "${JWS_HTTPS_SECRET}" containing the ${JWS_HTTPS_CERTIFICATE}[0m
      [36m    file used for serving secure content.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example JBoss Web Server application with a MySQL database.[0m
      [36m        For more information about using this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-rh-tomcat[0m
      [36m      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 + MySQL (with[0m
      [36m        https)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: tomcat,tomcat8,java,jboss[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 8 based application,[0m
      [36m        including a build configuration, application deployment configuration, database[0m
      [36m        deployment configuration for MySQL using persistence and secure communication[0m
      [36m        using https.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:33Z[0m
      [36m    name: jws31-tomcat8-mysql-persistent-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898448"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat8-mysql-persistent-s2i[0m
      [36m    uid: 5be5b372-5ea5-11e8-826c-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mysql",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The database server's port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mysql[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 3306[0m
      [36m        targetPort: 3306[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-mysql[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: jboss-webserver31-tomcat8-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DB_SERVICE_PREFIX_MAPPING[0m
      [36m              value: ${APPLICATION_NAME}-mysql=DB[0m
      [36m            - name: DB_JNDI[0m
      [36m              value: ${DB_JNDI}[0m
      [36m            - name: DB_USERNAME[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: DB_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: DB_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: DB_MIN_POOL_SIZE[0m
      [36m              value: ${DB_MIN_POOL_SIZE}[0m
      [36m            - name: DB_MAX_POOL_SIZE[0m
      [36m              value: ${DB_MAX_POOL_SIZE}[0m
      [36m            - name: DB_TX_ISOLATION[0m
      [36m              value: ${DB_TX_ISOLATION}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_DIR[0m
      [36m              value: /etc/jws-secret-volume[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_KEY}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}[0m
      [36m            - name: JWS_ADMIN_USERNAME[0m
      [36m              value: ${JWS_ADMIN_USERNAME}[0m
      [36m            - name: JWS_ADMIN_PASSWORD[0m
      [36m              value: ${JWS_ADMIN_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}[0m
      [36m                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'[0m
      [36m                  |grep -iq 'stateName *= *STARTED'[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/jws-secret-volume[0m
      [36m              name: jws-certificate-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: jws-certificate-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${JWS_HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mysql[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-mysql[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}-mysql[0m
      [36m          name: ${APPLICATION_NAME}-mysql[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: MYSQL_LOWER_CASE_TABLE_NAMES[0m
      [36m              value: ${MYSQL_LOWER_CASE_TABLE_NAMES}[0m
      [36m            - name: MYSQL_MAX_CONNECTIONS[0m
      [36m              value: ${MYSQL_MAX_CONNECTIONS}[0m
      [36m            - name: MYSQL_FT_MIN_WORD_LEN[0m
      [36m              value: ${MYSQL_FT_MIN_WORD_LEN}[0m
      [36m            - name: MYSQL_FT_MAX_WORD_LEN[0m
      [36m              value: ${MYSQL_FT_MAX_WORD_LEN}[0m
      [36m            - name: MYSQL_AIO[0m
      [36m              value: ${MYSQL_AIO}[0m
      [36m            image: mysql[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: ${APPLICATION_NAME}-mysql[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D[0m
      [36m                  $MYSQL_DATABASE -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${APPLICATION_NAME}-mysql-pvol[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: ${APPLICATION_NAME}-mysql-pvol[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${APPLICATION_NAME}-mysql-claim[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}-mysql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mysql:${MYSQL_IMAGE_STREAM_TAG}[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-mysql-claim[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: jws-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom https Route Hostname[0m
      [36m    name: HOSTNAME_HTTPS[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: "1.2"[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: todolist/todolist-jdbc[0m
      [36m  - description: Database JNDI name used by application to resolve the datasource,[0m
      [36m      e.g. jboss/datasources/mysqlDS[0m
      [36m    displayName: Database JNDI Name[0m
      [36m    name: DB_JNDI[0m
      [36m    value: jboss/datasources/defaultDS[0m
      [36m  - description: Database name[0m
      [36m    displayName: Database Name[0m
      [36m    name: DB_DATABASE[0m
      [36m    required: true[0m
      [36m    value: root[0m
      [36m  - description: Size of persistent storage for database volume.[0m
      [36m    displayName: Database Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The name of the secret containing the certificate files[0m
      [36m    displayName: Secret Name[0m
      [36m    name: JWS_HTTPS_SECRET[0m
      [36m    required: true[0m
      [36m    value: jws-app-secret[0m
      [36m  - description: The name of the certificate file within the secret[0m
      [36m    displayName: Certificate Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE[0m
      [36m    value: server.crt[0m
      [36m  - description: The name of the certificate key file within the secret[0m
      [36m    displayName: Certificate Key Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m    value: server.key[0m
      [36m  - description: The certificate password[0m
      [36m    displayName: Certificate Password[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m  - description: Sets xa-pool/min-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Minimum Pool Size[0m
      [36m    name: DB_MIN_POOL_SIZE[0m
      [36m  - description: Sets xa-pool/max-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Maximum Pool Size[0m
      [36m    name: DB_MAX_POOL_SIZE[0m
      [36m  - description: Sets transaction-isolation for the configured datasource.[0m
      [36m    displayName: Datasource Transaction Isolation[0m
      [36m    name: DB_TX_ISOLATION[0m
      [36m  - description: Sets how the table names are stored and compared.[0m
      [36m    displayName: MySQL Lower Case Table Names[0m
      [36m    name: MYSQL_LOWER_CASE_TABLE_NAMES[0m
      [36m  - description: The maximum permitted number of simultaneous client connections.[0m
      [36m    displayName: MySQL Maximum number of connections[0m
      [36m    name: MYSQL_MAX_CONNECTIONS[0m
      [36m  - description: The minimum length of the word to be included in a FULLTEXT index.[0m
      [36m    displayName: MySQL FullText Minimum Word Length[0m
      [36m    name: MYSQL_FT_MIN_WORD_LEN[0m
      [36m  - description: The maximum length of the word to be included in a FULLTEXT index.[0m
      [36m    displayName: MySQL FullText Maximum Word Length[0m
      [36m    name: MYSQL_FT_MAX_WORD_LEN[0m
      [36m  - description: Controls the innodb_use_native_aio setting value if the native AIO[0m
      [36m      is broken.[0m
      [36m    displayName: MySQL AIO[0m
      [36m    name: MYSQL_AIO[0m
      [36m  - description: Database user name[0m
      [36m    displayName: Database Username[0m
      [36m    from: user[a-zA-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DB_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: Database user password[0m
      [36m    displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DB_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin User[0m
      [36m    displayName: JWS Admin Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin Password[0m
      [36m    displayName: JWS Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m  - description: The tag to use for the "mysql" image stream.  Typically, this aligns[0m
      [36m      with the major.minor version of MySQL.[0m
      [36m    displayName: MySQL Image Stream Tag[0m
      [36m    name: MYSQL_IMAGE_STREAM_TAG[0m
      [36m    required: true[0m
      [36m    value: "5.7"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: jws31-tomcat8-postgresql-persistent-s2i[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new persistent JWS application for Apache Tomcat 8 (using PostgreSQL)[0m
      [36m    has been created in your project. The username/password for administering your[0m
      [36m    JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the PostgreSQL[0m
      [36m    database "${DB_DATABASE}" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please[0m
      [36m    be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the ${JWS_HTTPS_CERTIFICATE}[0m
      [36m    file used for serving secure content.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: Application template for JWS PostgreSQL applications with persistent[0m
      [36m        storage built using S2I.[0m
      [36m      iconClass: icon-rh-tomcat[0m
      [36m      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 + PostgreSQL[0m
      [36m        (with https)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: tomcat,tomcat8,java,jboss[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:37Z[0m
      [36m    name: jws31-tomcat8-postgresql-persistent-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898472"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat8-postgresql-persistent-s2i[0m
      [36m    uid: 5de18c40-5ea5-11e8-826c-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The database server's port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-postgresql[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 5432[0m
      [36m        targetPort: 5432[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-postgresql[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: jboss-webserver31-tomcat8-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DB_SERVICE_PREFIX_MAPPING[0m
      [36m              value: ${APPLICATION_NAME}-postgresql=DB[0m
      [36m            - name: DB_JNDI[0m
      [36m              value: ${DB_JNDI}[0m
      [36m            - name: DB_USERNAME[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: DB_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: DB_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: DB_MIN_POOL_SIZE[0m
      [36m              value: ${DB_MIN_POOL_SIZE}[0m
      [36m            - name: DB_MAX_POOL_SIZE[0m
      [36m              value: ${DB_MAX_POOL_SIZE}[0m
      [36m            - name: DB_TX_ISOLATION[0m
      [36m              value: ${DB_TX_ISOLATION}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_DIR[0m
      [36m              value: /etc/jws-secret-volume[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_KEY}[0m
      [36m            - name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}[0m
      [36m            - name: JWS_ADMIN_USERNAME[0m
      [36m              value: ${JWS_ADMIN_USERNAME}[0m
      [36m            - name: JWS_ADMIN_PASSWORD[0m
      [36m              value: ${JWS_ADMIN_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}[0m
      [36m                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'[0m
      [36m                  |grep -iq 'stateName *= *STARTED'[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/jws-secret-volume[0m
      [36m              name: jws-certificate-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: jws-certificate-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${JWS_HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-postgresql[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-postgresql[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}-postgresql[0m
      [36m          name: ${APPLICATION_NAME}-postgresql[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: POSTGRESQL_USER[0m
      [36m              value: ${DB_USERNAME}[0m
      [36m            - name: POSTGRESQL_PASSWORD[0m
      [36m              value: ${DB_PASSWORD}[0m
      [36m            - name: POSTGRESQL_DATABASE[0m
      [36m              value: ${DB_DATABASE}[0m
      [36m            - name: POSTGRESQL_MAX_CONNECTIONS[0m
      [36m              value: ${POSTGRESQL_MAX_CONNECTIONS}[0m
      [36m            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS[0m
      [36m              value: ${POSTGRESQL_MAX_CONNECTIONS}[0m
      [36m            - name: POSTGRESQL_SHARED_BUFFERS[0m
      [36m              value: ${POSTGRESQL_SHARED_BUFFERS}[0m
      [36m            image: postgresql[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 5432[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: ${APPLICATION_NAME}-postgresql[0m
      [36m            ports:[0m
      [36m            - containerPort: 5432[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE[0m
      [36m                  -c 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/pgsql/data[0m
      [36m              name: ${APPLICATION_NAME}-postgresql-pvol[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: ${APPLICATION_NAME}-postgresql-pvol[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${APPLICATION_NAME}-postgresql-claim[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}-postgresql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-postgresql-claim[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: jws-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom https Route Hostname[0m
      [36m    name: HOSTNAME_HTTPS[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: "1.2"[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: todolist/todolist-jdbc[0m
      [36m  - description: Database JNDI name used by application to resolve the datasource,[0m
      [36m      e.g. jboss/datasources/postgresqlDS[0m
      [36m    displayName: Database JNDI Name[0m
      [36m    name: DB_JNDI[0m
      [36m    value: jboss/datasources/defaultDS[0m
      [36m  - description: Database name[0m
      [36m    displayName: Database Name[0m
      [36m    name: DB_DATABASE[0m
      [36m    required: true[0m
      [36m    value: root[0m
      [36m  - description: Size of persistent storage for database volume.[0m
      [36m    displayName: Database Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The name of the secret containing the certificate files[0m
      [36m    displayName: Secret Name[0m
      [36m    name: JWS_HTTPS_SECRET[0m
      [36m    required: true[0m
      [36m    value: jws-app-secret[0m
      [36m  - description: The name of the certificate file within the secret[0m
      [36m    displayName: Certificate Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE[0m
      [36m    value: server.crt[0m
      [36m  - description: The name of the certificate key file within the secret[0m
      [36m    displayName: Certificate Key Name[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_KEY[0m
      [36m    value: server.key[0m
      [36m  - description: The certificate password[0m
      [36m    displayName: Certificate Password[0m
      [36m    name: JWS_HTTPS_CERTIFICATE_PASSWORD[0m
      [36m  - description: Sets xa-pool/min-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Minimum Pool Size[0m
      [36m    name: DB_MIN_POOL_SIZE[0m
      [36m  - description: Sets xa-pool/max-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Maximum Pool Size[0m
      [36m    name: DB_MAX_POOL_SIZE[0m
      [36m  - description: Sets transaction-isolation for the configured datasource.[0m
      [36m    displayName: Datasource Transaction Isolation[0m
      [36m    name: DB_TX_ISOLATION[0m
      [36m  - description: The maximum number of client connections allowed. This also sets[0m
      [36m      the maximum number of prepared transactions.[0m
      [36m    displayName: PostgreSQL Maximum number of connections[0m
      [36m    name: POSTGRESQL_MAX_CONNECTIONS[0m
      [36m  - description: Configures how much memory is dedicated to PostgreSQL for caching[0m
      [36m      data.[0m
      [36m    displayName: PostgreSQL Shared Buffers[0m
      [36m    name: POSTGRESQL_SHARED_BUFFERS[0m
      [36m  - description: Database user name[0m
      [36m    displayName: Database Username[0m
      [36m    from: user[a-zA-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DB_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: Database user password[0m
      [36m    displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DB_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin User[0m
      [36m    displayName: JWS Admin Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: JWS Admin Password[0m
      [36m    displayName: JWS Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: JWS_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m  - description: The tag to use for the "postgresql" image stream.  Typically, this[0m
      [36m      aligns with the major.minor version of PostgreSQL.[0m
      [36m    displayName: PostgreSQL Image Stream Tag[0m
      [36m    name: POSTGRESQL_IMAGE_STREAM_TAG[0m
      [36m    required: true[0m
      [36m    value: "9.5"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: laravel-mysql-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/luciddreamz/laravel-ex/blob/master/readme.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Laravel application with a MySQL database. For more[0m
      [36m        information about using this template, including OpenShift considerations,[0m
      [36m        see https://github.com/luciddreamz/laravel-ex/blob/master/readme.md.[0m
      [36m      iconClass: icon-laravel[0m
      [36m      openshift.io/display-name: Laravel + MySQL (Persistent)[0m
      [36m      tags: quickstart,php,laravel[0m
      [36m    creationTimestamp: 2018-04-03T15:34:01Z[0m
      [36m    name: laravel-mysql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782379"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/laravel-mysql-persistent[0m
      [36m    uid: 6f092b12-3754-11e8-b5b4-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      databasePassword: ${DATABASE_PASSWORD}[0m
      [36m      databaseUser: ${DATABASE_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: COMPOSER_MIRROR[0m
      [36m            value: ${COMPOSER_MIRROR}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: php:7.0[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        recreateParams:[0m
      [36m          pre:[0m
      [36m            execNewPod:[0m
      [36m              command:[0m
      [36m              - ./migrate-database.sh[0m
      [36m              containerName: laravel-mysql-persistent[0m
      [36m            failurePolicy: Retry[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: CLUSTER_NAME[0m
      [36m              value: ${CLUSTER_NAME}[0m
      [36m            - name: ROUTER_SHARD[0m
      [36m              value: ${ROUTER_SHARD}[0m
      [36m            - name: DB_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: DB_CONNECTION[0m
      [36m              value: ${DATABASE_ENGINE}[0m
      [36m            - name: DB_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: DB_USERNAME[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: databaseUser[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: DB_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: databasePassword[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: APP_KEY[0m
      [36m              value: ${LARAVEL_APP_KEY}[0m
      [36m            - name: APP_ENV[0m
      [36m              value: ${LARAVEL_APP_ENV}[0m
      [36m            - name: APP_DEBUG[0m
      [36m              value: ${LARAVEL_APP_DEBUG}[0m
      [36m            - name: OPCACHE_REVALIDATE_FREQ[0m
      [36m              value: ${OPCACHE_REVALIDATE_FREQ}[0m
      [36m            image: ${NAME}[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: laravel-mysql-persistent[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /health.php[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - laravel-mysql-persistent[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mysql[0m
      [36m        port: 3306[0m
      [36m        targetPort: 3306[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              value: ${DATABASE_USER}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              value: ${DATABASE_PASSWORD}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            image: mysql[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mysql[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}[0m
      [36m                  -D ${DATABASE_NAME} -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_MYSQL_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mysql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mysql:5.7[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: laravel-mysql-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/luciddreamz/laravel-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Determines the 'environment' your application is currently.[0m
      [36m    displayName: Laravel Application Environment[0m
      [36m    name: LARAVEL_APP_ENV[0m
      [36m    required: true[0m
      [36m    value: development[0m
      [36m  - description: Enable or disable detailed error messages.[0m
      [36m    displayName: Laravel Application Debug Mode[0m
      [36m    name: LARAVEL_APP_DEBUG[0m
      [36m    required: true[0m
      [36m    value: "true"[0m
      [36m  - description: How often to check script timestamps for updates, in seconds. 0 will[0m
      [36m      result in OPcache checking for updates on every request.[0m
      [36m    displayName: OPcache Revalidation Frequency[0m
      [36m    name: OPCACHE_REVALIDATE_FREQ[0m
      [36m    value: "0"[0m
      [36m  - description: The custom Composer mirror URL[0m
      [36m    displayName: Custom Composer Mirror URL[0m
      [36m    name: COMPOSER_MIRROR[0m
      [36m  - description: The name of your current OpenShift cluster (console.CLUSTER_NAME.openshift.com).[0m
      [36m    displayName: Cluster Name[0m
      [36m    name: CLUSTER_NAME[0m
      [36m    required: true[0m
      [36m    value: preview[0m
      [36m  - description: The router shard used by routes in your current OpenShift cluster[0m
      [36m      (http://PROJECT_NAME-APPLICATION_NAME.ROUTER_SHARD.CLUSTER_NAME.openshiftapps.com/).[0m
      [36m    displayName: Router Shard[0m
      [36m    name: ROUTER_SHARD[0m
      [36m    required: true[0m
      [36m    value: 44fs[0m
      [36m  - description: Maximum amount of memory the Laravel container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the MySQL container can use.[0m
      [36m    displayName: Memory Limit (MySQL)[0m
      [36m    name: MEMORY_MYSQL_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the Laravel service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: A secret string used to configure the GitHub webhook.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mysql[0m
      [36m  - description: 'Database engine: mysql (default), pgsql, or sqlite.'[0m
      [36m    displayName: Database Engine[0m
      [36m    name: DATABASE_ENGINE[0m
      [36m    required: true[0m
      [36m    value: mysql[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: default[0m
      [36m  - displayName: Database User[0m
      [36m    name: DATABASE_USER[0m
      [36m    required: true[0m
      [36m    value: laravel[0m
      [36m  - displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - description: Set this to a 32 character random string.[0m
      [36m    displayName: Laravel Encryption Key[0m
      [36m    from: '[\w]{32}'[0m
      [36m    generate: expression[0m
      [36m    name: LARAVEL_APP_KEY[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: mariadb-persistent-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Username: ${MYSQL_USER}[0m
      [36m           Password: ${MYSQL_PASSWORD}[0m
      [36m      Database Name: ${MYSQL_DATABASE}[0m
      [36m     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        MariaDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.[0m
      [36m[0m
      [36m        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-mariadb[0m
      [36m      openshift.io/display-name: MariaDB[0m
      [36m      openshift.io/documentation-url: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md[0m
      [36m      openshift.io/long-description: This template provides a standalone MariaDB server[0m
      [36m        with a database created.  The database is stored on persistent storage.  The[0m
      [36m        database name, username, and password are chosen via parameters when provisioning[0m
      [36m        this service.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,mariadb[0m
      [36m    creationTimestamp: 2018-05-23T16:21:35Z[0m
      [36m    name: mariadb-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898458"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/mariadb-persistent[0m
      [36m    uid: 5cd9ea36-5ea5-11e8-bbcf-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-database_name: '{.data[''database-name'']}'[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'[0m
      [36m        template.openshift.io/expose-username: '{.data[''database-user'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-name: ${MYSQL_DATABASE}[0m
      [36m      database-password: ${MYSQL_PASSWORD}[0m
      [36m      database-root-password: ${MYSQL_ROOT_PASSWORD}[0m
      [36m      database-user: ${MYSQL_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mariadb")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mariadb[0m
      [36m        port: 3306[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_ROOT_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-root-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-name[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mariadb[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D[0m
      [36m                  $MYSQL_DATABASE -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mariadb[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mariadb:${MARIADB_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mariadb[0m
      [36m  - description: Username for MariaDB user that will be used for accessing the database.[0m
      [36m    displayName: MariaDB Connection Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_USER[0m
      [36m    required: true[0m
      [36m  - description: Password for the MariaDB connection user.[0m
      [36m    displayName: MariaDB Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Password for the MariaDB root user.[0m
      [36m    displayName: MariaDB root Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_ROOT_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Name of the MariaDB database accessed.[0m
      [36m    displayName: MariaDB Database Name[0m
      [36m    name: MYSQL_DATABASE[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Version of MariaDB image to be used (10.1, 10.2 or latest).[0m
      [36m    displayName: Version of MariaDB Image[0m
      [36m    name: MARIADB_VERSION[0m
      [36m    required: true[0m
      [36m    value: "10.2"[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: mongodb-persistent-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Username: ${MONGODB_USER}[0m
      [36m           Password: ${MONGODB_PASSWORD}[0m
      [36m      Database Name: ${MONGODB_DATABASE}[0m
      [36m     Connection URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${DATABASE_SERVICE_NAME}/${MONGODB_DATABASE}[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.[0m
      [36m[0m
      [36m        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-mongodb[0m
      [36m      openshift.io/display-name: MongoDB[0m
      [36m      openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mongodb.html[0m
      [36m      openshift.io/long-description: This template provides a standalone MongoDB server[0m
      [36m        with a database created.  The database is stored on persistent storage.  The[0m
      [36m        database name, username, and password are chosen via parameters when provisioning[0m
      [36m        this service.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,mongodb[0m
      [36m    creationTimestamp: 2018-04-03T15:34:02Z[0m
      [36m    name: mongodb-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782381"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/mongodb-persistent[0m
      [36m    uid: 6fcb65f7-3754-11e8-8c2d-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-admin_password: '{.data[''database-admin-password'']}'[0m
      [36m        template.openshift.io/expose-database_name: '{.data[''database-name'']}'[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m        template.openshift.io/expose-username: '{.data[''database-user'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-admin-password: ${MONGODB_ADMIN_PASSWORD}[0m
      [36m      database-name: ${MONGODB_DATABASE}[0m
      [36m      database-password: ${MONGODB_PASSWORD}[0m
      [36m      database-user: ${MONGODB_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mongo[0m
      [36m        nodePort: 0[0m
      [36m        port: 27017[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 27017[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m    status:[0m
      [36m      loadBalancer: {}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - capabilities: {}[0m
      [36m            env:[0m
      [36m            - name: MONGODB_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MONGODB_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MONGODB_ADMIN_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-admin-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MONGODB_DATABASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-name[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 27017[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mongodb[0m
      [36m            ports:[0m
      [36m            - containerPort: 27017[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD[0m
      [36m                  --eval="quit()"[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            securityContext:[0m
      [36m              capabilities: {}[0m
      [36m              privileged: false[0m
      [36m            terminationMessagePath: /dev/termination-log[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mongodb/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          dnsPolicy: ClusterFirst[0m
      [36m          restartPolicy: Always[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mongodb[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mongodb:${MONGODB_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m          lastTriggeredImage: ""[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m    status: {}[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mongodb[0m
      [36m  - description: Username for MongoDB user that will be used for accessing the database.[0m
      [36m    displayName: MongoDB Connection Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: MONGODB_USER[0m
      [36m    required: true[0m
      [36m  - description: Password for the MongoDB connection user.[0m
      [36m    displayName: MongoDB Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MONGODB_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Name of the MongoDB database accessed.[0m
      [36m    displayName: MongoDB Database Name[0m
      [36m    name: MONGODB_DATABASE[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Password for the database admin user.[0m
      [36m    displayName: MongoDB Admin Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MONGODB_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: Version of MongoDB image to be used (2.4, 2.6, 3.2 or latest).[0m
      [36m    displayName: Version of MongoDB Image[0m
      [36m    name: MONGODB_VERSION[0m
      [36m    required: true[0m
      [36m    value: "3.2"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: mysql-persistent-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Username: ${MYSQL_USER}[0m
      [36m           Password: ${MYSQL_PASSWORD}[0m
      [36m      Database Name: ${MYSQL_DATABASE}[0m
      [36m     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        MySQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.[0m
      [36m[0m
      [36m        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-mysql-database[0m
      [36m      openshift.io/display-name: MySQL[0m
      [36m      openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mysql.html[0m
      [36m      openshift.io/long-description: This template provides a standalone MySQL server[0m
      [36m        with a database created.  The database is stored on persistent storage.  The[0m
      [36m        database name, username, and password are chosen via parameters when provisioning[0m
      [36m        this service.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,mysql[0m
      [36m    creationTimestamp: 2018-05-23T16:21:35Z[0m
      [36m    name: mysql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898461"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/mysql-persistent[0m
      [36m    uid: 5d0994c5-5ea5-11e8-868f-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-database_name: '{.data[''database-name'']}'[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'[0m
      [36m        template.openshift.io/expose-username: '{.data[''database-user'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-name: ${MYSQL_DATABASE}[0m
      [36m      database-password: ${MYSQL_PASSWORD}[0m
      [36m      database-root-password: ${MYSQL_ROOT_PASSWORD}[0m
      [36m      database-user: ${MYSQL_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mysql[0m
      [36m        port: 3306[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MYSQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_ROOT_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-root-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MYSQL_DATABASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-name[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 3306[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mysql[0m
      [36m            ports:[0m
      [36m            - containerPort: 3306[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D[0m
      [36m                  $MYSQL_DATABASE -e 'SELECT 1'[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mysql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mysql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mysql:${MYSQL_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mysql[0m
      [36m  - description: Username for MySQL user that will be used for accessing the database.[0m
      [36m    displayName: MySQL Connection Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_USER[0m
      [36m    required: true[0m
      [36m  - description: Password for the MySQL connection user.[0m
      [36m    displayName: MySQL Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Password for the MySQL root user.[0m
      [36m    displayName: MySQL root user Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: MYSQL_ROOT_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Name of the MySQL database accessed.[0m
      [36m    displayName: MySQL Database Name[0m
      [36m    name: MYSQL_DATABASE[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: Version of MySQL image to be used (5.7, or latest).[0m
      [36m    displayName: Version of MySQL Image[0m
      [36m    name: MYSQL_VERSION[0m
      [36m    required: true[0m
      [36m    value: "5.7"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: nodejs-mongo-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Node.js application with a MongoDB database. For more[0m
      [36m        information about using this template, including OpenShift considerations,[0m
      [36m        see https://github.com/openshift/nodejs-ex/blob/master/README.md.[0m
      [36m      iconClass: icon-nodejs[0m
      [36m      openshift.io/display-name: Node.js + MongoDB[0m
      [36m      openshift.io/documentation-url: https://github.com/openshift/nodejs-ex[0m
      [36m      openshift.io/long-description: This template defines resources needed to develop[0m
      [36m        a NodeJS application, including a build configuration, application deployment[0m
      [36m        configuration, and database deployment configuration.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: quickstart,nodejs[0m
      [36m      template.openshift.io/bindable: "false"[0m
      [36m    creationTimestamp: 2018-05-23T16:21:36Z[0m
      [36m    name: nodejs-mongo-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898463"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/nodejs-mongo-persistent[0m
      [36m    uid: 5d42fd7d-5ea5-11e8-826c-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      database-admin-password: ${DATABASE_ADMIN_PASSWORD}[0m
      [36m      database-password: ${DATABASE_PASSWORD}[0m
      [36m      database-user: ${DATABASE_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      postCommit:[0m
      [36m        script: npm test[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: NPM_MIRROR[0m
      [36m            value: ${NPM_MIRROR}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: nodejs:${NODEJS_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DATABASE_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: MONGODB_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MONGODB_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MONGODB_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: MONGODB_ADMIN_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-admin-password[0m
      [36m                  name: ${NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: nodejs-mongo-persistent[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - nodejs-mongo-persistent[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: mongodb[0m
      [36m        port: 27017[0m
      [36m        targetPort: 27017[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: MONGODB_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MONGODB_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: MONGODB_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: MONGODB_ADMIN_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-admin-password[0m
      [36m                  name: ${NAME}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 27017[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: mongodb[0m
      [36m            ports:[0m
      [36m            - containerPort: 27017[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD[0m
      [36m                  --eval="quit()"[0m
      [36m              initialDelaySeconds: 3[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_MONGODB_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/mongodb/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - mongodb[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: mongodb:${MONGODB_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: nodejs-mongo-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Version of NodeJS image to be used (6, 8, or latest).[0m
      [36m    displayName: Version of NodeJS Image[0m
      [36m    name: NODEJS_VERSION[0m
      [36m    required: true[0m
      [36m    value: "8"[0m
      [36m  - description: Version of MongoDB image to be used (3.2, 3.4, or latest).[0m
      [36m    displayName: Version of MongoDB Image[0m
      [36m    name: MONGODB_VERSION[0m
      [36m    required: true[0m
      [36m    value: "3.4"[0m
      [36m  - description: Maximum amount of memory the Node.js container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the MongoDB container can use.[0m
      [36m    displayName: Memory Limit (MongoDB)[0m
      [36m    name: MEMORY_MONGODB_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/openshift/nodejs-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the Node.js service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: Github trigger secret.  A difficult to guess string encoded as part[0m
      [36m      of the webhook URL.  Not encrypted.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - description: A secret string used to configure the Generic webhook.[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: mongodb[0m
      [36m  - description: Username for MongoDB user that will be used for accessing the database.[0m
      [36m    displayName: MongoDB Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_USER[0m
      [36m  - description: Password for the MongoDB user.[0m
      [36m    displayName: MongoDB Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Password for the database admin user.[0m
      [36m    displayName: Database Administrator Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_ADMIN_PASSWORD[0m
      [36m  - description: The custom NPM mirror URL[0m
      [36m    displayName: Custom NPM Mirror URL[0m
      [36m    name: NPM_MIRROR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: openjdk18-web-basic-s2i[0m
      [36m    xpaas: 1.4.8[0m
      [36m  message: A new java application has been created in your project.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Java application using OpenJDK 8. For more information[0m
      [36m        about using this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-rh-openjdk[0m
      [36m      openshift.io/display-name: OpenJDK 8[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: java[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat OpenJDK Java 8 based application.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.8[0m
      [36m    creationTimestamp: 2018-04-03T15:34:05Z[0m
      [36m    name: openjdk18-web-basic-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782384"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/openjdk18-web-basic-s2i[0m
      [36m    uid: 71492dc5-3754-11e8-8c2d-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The application's http port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      host: ${HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: redhat-openjdk18-openshift:1.2[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env: [][0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m          terminationGracePeriodSeconds: 75[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${APPLICATION_NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: openjdk-app[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Custom http Route Hostname[0m
      [36m    name: HOSTNAME_HTTP[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-openshift/openshift-quickstarts[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: master[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: undertow-servlet[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: postgresql-persistent-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Username: ${POSTGRESQL_USER}[0m
      [36m           Password: ${POSTGRESQL_PASSWORD}[0m
      [36m      Database Name: ${POSTGRESQL_DATABASE}[0m
      [36m     Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        PostgreSQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.[0m
      [36m[0m
      [36m        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-postgresql[0m
      [36m      openshift.io/display-name: PostgreSQL[0m
      [36m      openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/postgresql.html[0m
      [36m      openshift.io/long-description: This template provides a standalone PostgreSQL[0m
      [36m        server with a database created.  The database is stored on persistent storage.  The[0m
      [36m        database name, username, and password are chosen via parameters when provisioning[0m
      [36m        this service.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,postgresql[0m
      [36m    creationTimestamp: 2018-05-23T16:21:36Z[0m
      [36m    name: postgresql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898465"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/postgresql-persistent[0m
      [36m    uid: 5d7758bd-5ea5-11e8-bbcf-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-database_name: '{.data[''database-name'']}'[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m        template.openshift.io/expose-username: '{.data[''database-user'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-name: ${POSTGRESQL_DATABASE}[0m
      [36m      database-password: ${POSTGRESQL_PASSWORD}[0m
      [36m      database-user: ${POSTGRESQL_USER}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: postgresql[0m
      [36m        nodePort: 0[0m
      [36m        port: 5432[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 5432[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m    status:[0m
      [36m      loadBalancer: {}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - capabilities: {}[0m
      [36m            env:[0m
      [36m            - name: POSTGRESQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: POSTGRESQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: POSTGRESQL_DATABASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-name[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m                - --live[0m
      [36m              initialDelaySeconds: 120[0m
      [36m              timeoutSeconds: 10[0m
      [36m            name: postgresql[0m
      [36m            ports:[0m
      [36m            - containerPort: 5432[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            securityContext:[0m
      [36m              capabilities: {}[0m
      [36m              privileged: false[0m
      [36m            terminationMessagePath: /dev/termination-log[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/pgsql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          dnsPolicy: ClusterFirst[0m
      [36m          restartPolicy: Always[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - postgresql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: postgresql:${POSTGRESQL_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m          lastTriggeredImage: ""[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m    status: {}[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: postgresql[0m
      [36m  - description: Username for PostgreSQL user that will be used for accessing the[0m
      [36m      database.[0m
      [36m    displayName: PostgreSQL Connection Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: POSTGRESQL_USER[0m
      [36m    required: true[0m
      [36m  - description: Password for the PostgreSQL connection user.[0m
      [36m    displayName: PostgreSQL Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: POSTGRESQL_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Name of the PostgreSQL database accessed.[0m
      [36m    displayName: PostgreSQL Database Name[0m
      [36m    name: POSTGRESQL_DATABASE[0m
      [36m    required: true[0m
      [36m    value: sampledb[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: Version of PostgreSQL image to be used (9.4, 9.5, 9.6 or latest).[0m
      [36m    displayName: Version of PostgreSQL Image[0m
      [36m    name: POSTGRESQL_VERSION[0m
      [36m    required: true[0m
      [36m    value: "9.6"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    app: rails-pgsql-persistent[0m
      [36m    template: rails-pgsql-persistent[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example Rails application with a PostgreSQL database. For more[0m
      [36m        information about using this template, including OpenShift considerations,[0m
      [36m        see https://github.com/openshift/rails-ex/blob/master/README.md.[0m
      [36m      iconClass: icon-ruby[0m
      [36m      openshift.io/display-name: Rails + PostgreSQL[0m
      [36m      openshift.io/documentation-url: https://github.com/openshift/rails-ex[0m
      [36m      openshift.io/long-description: This template defines resources needed to develop[0m
      [36m        a Rails application, including a build configuration, application deployment[0m
      [36m        configuration, and database deployment configuration.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: quickstart,ruby,rails[0m
      [36m      template.openshift.io/bindable: "false"[0m
      [36m    creationTimestamp: 2018-05-23T16:21:36Z[0m
      [36m    name: rails-pgsql-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898468"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/rails-pgsql-persistent[0m
      [36m    uid: 5dad9d95-5ea5-11e8-868f-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    stringData:[0m
      [36m      application-password: ${APPLICATION_PASSWORD}[0m
      [36m      application-user: ${APPLICATION_USER}[0m
      [36m      database-password: ${DATABASE_PASSWORD}[0m
      [36m      database-user: ${DATABASE_USER}[0m
      [36m      keybase: ${SECRET_KEY_BASE}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes and load balances the application pods[0m
      [36m        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",[0m
      [36m          "kind": "Service"}]'[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: web[0m
      [36m        port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      host: ${APPLICATION_DOMAIN}[0m
      [36m      to:[0m
      [36m        kind: Service[0m
      [36m        name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Keeps track of changes in the application image[0m
      [36m      name: ${NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to build the application[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${NAME}:latest[0m
      [36m      postCommit:[0m
      [36m        script: bundle exec rake test[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: RUBYGEM_MIRROR[0m
      [36m            value: ${RUBYGEM_MIRROR}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ruby:2.3[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the application server[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${NAME}[0m
      [36m      strategy:[0m
      [36m        recreateParams:[0m
      [36m          pre:[0m
      [36m            execNewPod:[0m
      [36m              command:[0m
      [36m              - ./migrate-database.sh[0m
      [36m              containerName: ${NAME}[0m
      [36m            failurePolicy: Abort[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${NAME}[0m
      [36m          name: ${NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DATABASE_SERVICE_NAME[0m
      [36m              value: ${DATABASE_SERVICE_NAME}[0m
      [36m            - name: POSTGRESQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: SECRET_KEY_BASE[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: keybase[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: POSTGRESQL_MAX_CONNECTIONS[0m
      [36m              value: ${POSTGRESQL_MAX_CONNECTIONS}[0m
      [36m            - name: POSTGRESQL_SHARED_BUFFERS[0m
      [36m              value: ${POSTGRESQL_SHARED_BUFFERS}[0m
      [36m            - name: APPLICATION_DOMAIN[0m
      [36m              value: ${APPLICATION_DOMAIN}[0m
      [36m            - name: APPLICATION_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: application-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: APPLICATION_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: application-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: RAILS_ENV[0m
      [36m              value: ${RAILS_ENV}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /articles[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 10[0m
      [36m              timeoutSeconds: 3[0m
      [36m            name: ${NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8080[0m
      [36m            readinessProbe:[0m
      [36m              httpGet:[0m
      [36m                path: /articles[0m
      [36m                port: 8080[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 3[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: ${NAME}:latest[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Exposes the database server[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: postgresql[0m
      [36m        port: 5432[0m
      [36m        targetPort: 5432[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Defines how to deploy the database[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m          name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: POSTGRESQL_USER[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-user[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${NAME}[0m
      [36m            - name: POSTGRESQL_DATABASE[0m
      [36m              value: ${DATABASE_NAME}[0m
      [36m            - name: POSTGRESQL_MAX_CONNECTIONS[0m
      [36m              value: ${POSTGRESQL_MAX_CONNECTIONS}[0m
      [36m            - name: POSTGRESQL_SHARED_BUFFERS[0m
      [36m              value: ${POSTGRESQL_SHARED_BUFFERS}[0m
      [36m            image: ' '[0m
      [36m            livenessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m                - --live[0m
      [36m              initialDelaySeconds: 120[0m
      [36m              timeoutSeconds: 10[0m
      [36m            name: postgresql[0m
      [36m            ports:[0m
      [36m            - containerPort: 5432[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /usr/libexec/check-container[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_POSTGRESQL_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/pgsql/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - postgresql[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: postgresql:9.5[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name assigned to all of the frontend objects defined in this[0m
      [36m      template.[0m
      [36m    displayName: Name[0m
      [36m    name: NAME[0m
      [36m    required: true[0m
      [36m    value: rails-pgsql-persistent[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maximum amount of memory the Rails container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Maximum amount of memory the PostgreSQL container can use.[0m
      [36m    displayName: Memory Limit (PostgreSQL)[0m
      [36m    name: MEMORY_POSTGRESQL_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: The URL of the repository with your application source code.[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/openshift/rails-ex.git[0m
      [36m  - description: Set this to a branch name, tag or other ref of your repository if[0m
      [36m      you are not using the default branch.[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m  - description: Set this to the relative path to your project if it is not in the[0m
      [36m      root of your repository.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m  - description: The exposed hostname that will route to the Rails service, if left[0m
      [36m      blank a value will be defaulted.[0m
      [36m    displayName: Application Hostname[0m
      [36m    name: APPLICATION_DOMAIN[0m
      [36m  - description: Github trigger secret.  A difficult to guess string encoded as part[0m
      [36m      of the webhook URL.  Not encrypted.[0m
      [36m    displayName: GitHub Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{40}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m  - description: Your secret key for verifying the integrity of signed cookies.[0m
      [36m    displayName: Secret Key[0m
      [36m    from: '[a-z0-9]{127}'[0m
      [36m    generate: expression[0m
      [36m    name: SECRET_KEY_BASE[0m
      [36m  - description: The application user that is used within the sample application to[0m
      [36m      authorize access on pages.[0m
      [36m    displayName: Application Username[0m
      [36m    name: APPLICATION_USER[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: The application password that is used within the sample application[0m
      [36m      to authorize access on pages.[0m
      [36m    displayName: Application Password[0m
      [36m    name: APPLICATION_PASSWORD[0m
      [36m    required: true[0m
      [36m    value: secret[0m
      [36m  - description: Environment under which the sample application will run. Could be[0m
      [36m      set to production, development or test.[0m
      [36m    displayName: Rails Environment[0m
      [36m    name: RAILS_ENV[0m
      [36m    required: true[0m
      [36m    value: production[0m
      [36m  - displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: postgresql[0m
      [36m  - displayName: Database Username[0m
      [36m    from: user[A-Z0-9]{3}[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_USER[0m
      [36m  - displayName: Database Password[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: DATABASE_PASSWORD[0m
      [36m  - displayName: Database Name[0m
      [36m    name: DATABASE_NAME[0m
      [36m    required: true[0m
      [36m    value: root[0m
      [36m  - displayName: Maximum Database Connections[0m
      [36m    name: POSTGRESQL_MAX_CONNECTIONS[0m
      [36m    value: "100"[0m
      [36m  - displayName: Shared Buffer Amount[0m
      [36m    name: POSTGRESQL_SHARED_BUFFERS[0m
      [36m    value: 12MB[0m
      [36m  - description: The custom RubyGems mirror URL[0m
      [36m    displayName: Custom RubyGems Mirror URL[0m
      [36m    name: RUBYGEM_MIRROR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: redis-ephemeral-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Password: ${REDIS_PASSWORD}[0m
      [36m     Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        Redis in-memory data structure store, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.[0m
      [36m[0m
      [36m        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing[0m
      [36m      iconClass: icon-redis[0m
      [36m      openshift.io/display-name: Redis (Ephemeral)[0m
      [36m      openshift.io/documentation-url: https://github.com/sclorg/redis-container/tree/master/3.2[0m
      [36m      openshift.io/long-description: This template provides a standalone Redis server.  The[0m
      [36m        data is not stored on persistent storage, so any restart of the service will[0m
      [36m        result in all data being lost.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,redis[0m
      [36m    creationTimestamp: 2018-04-03T15:34:05Z[0m
      [36m    name: redis-ephemeral[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782387"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/redis-ephemeral[0m
      [36m    uid: 71856f40-3754-11e8-8c2d-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-password: ${REDIS_PASSWORD}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: redis[0m
      [36m        nodePort: 0[0m
      [36m        port: 6379[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 6379[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m    status:[0m
      [36m      loadBalancer: {}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - capabilities: {}[0m
      [36m            env:[0m
      [36m            - name: REDIS_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 6379[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: redis[0m
      [36m            ports:[0m
      [36m            - containerPort: 6379[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            securityContext:[0m
      [36m              capabilities: {}[0m
      [36m              privileged: false[0m
      [36m            terminationMessagePath: /dev/termination-log[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/redis/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          dnsPolicy: ClusterFirst[0m
      [36m          restartPolicy: Always[0m
      [36m          volumes:[0m
      [36m          - emptyDir:[0m
      [36m              medium: ""[0m
      [36m            name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - redis[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: redis:${REDIS_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m          lastTriggeredImage: ""[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m    status: {}[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: redis[0m
      [36m  - description: Password for the Redis connection user.[0m
      [36m    displayName: Redis Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: REDIS_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Version of Redis image to be used (3.2 or latest).[0m
      [36m    displayName: Version of Redis Image[0m
      [36m    name: REDIS_VERSION[0m
      [36m    required: true[0m
      [36m    value: "3.2"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: redis-persistent-template[0m
      [36m  message: |-[0m
      [36m    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.[0m
      [36m[0m
      [36m           Password: ${REDIS_PASSWORD}[0m
      [36m     Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/[0m
      [36m[0m
      [36m    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: |-[0m
      [36m        Redis in-memory data structure store, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.[0m
      [36m[0m
      [36m        NOTE: You must have persistent volumes available in your cluster to use this template.[0m
      [36m      iconClass: icon-redis[0m
      [36m      openshift.io/display-name: Redis[0m
      [36m      openshift.io/documentation-url: https://github.com/sclorg/redis-container/tree/master/3.2[0m
      [36m      openshift.io/long-description: This template provides a standalone Redis server.  The[0m
      [36m        data is stored on persistent storage.[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      openshift.io/support-url: https://access.redhat.com[0m
      [36m      tags: database,redis[0m
      [36m    creationTimestamp: 2018-04-03T15:34:04Z[0m
      [36m    name: redis-persistent[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782388"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/redis-persistent[0m
      [36m    uid: 7108354f-3754-11e8-937f-0a46c474dfe0[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Secret[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-password: '{.data[''database-password'']}'[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    stringData:[0m
      [36m      database-password: ${REDIS_PASSWORD}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - name: redis[0m
      [36m        nodePort: 0[0m
      [36m        port: 6379[0m
      [36m        protocol: TCP[0m
      [36m        targetPort: 6379[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      sessionAffinity: None[0m
      [36m      type: ClusterIP[0m
      [36m    status:[0m
      [36m      loadBalancer: {}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: PersistentVolumeClaim[0m
      [36m    metadata:[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      accessModes:[0m
      [36m      - ReadWriteOnce[0m
      [36m      resources:[0m
      [36m        requests:[0m
      [36m          storage: ${VOLUME_CAPACITY}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        template.alpha.openshift.io/wait-for-ready: "true"[0m
      [36m      name: ${DATABASE_SERVICE_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        name: ${DATABASE_SERVICE_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            name: ${DATABASE_SERVICE_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - capabilities: {}[0m
      [36m            env:[0m
      [36m            - name: REDIS_PASSWORD[0m
      [36m              valueFrom:[0m
      [36m                secretKeyRef:[0m
      [36m                  key: database-password[0m
      [36m                  name: ${DATABASE_SERVICE_NAME}[0m
      [36m            image: ' '[0m
      [36m            imagePullPolicy: IfNotPresent[0m
      [36m            livenessProbe:[0m
      [36m              initialDelaySeconds: 30[0m
      [36m              tcpSocket:[0m
      [36m                port: 6379[0m
      [36m              timeoutSeconds: 1[0m
      [36m            name: redis[0m
      [36m            ports:[0m
      [36m            - containerPort: 6379[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/sh[0m
      [36m                - -i[0m
      [36m                - -c[0m
      [36m                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"[0m
      [36m              initialDelaySeconds: 5[0m
      [36m              timeoutSeconds: 1[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            securityContext:[0m
      [36m              capabilities: {}[0m
      [36m              privileged: false[0m
      [36m            terminationMessagePath: /dev/termination-log[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /var/lib/redis/data[0m
      [36m              name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m          dnsPolicy: ClusterFirst[0m
      [36m          restartPolicy: Always[0m
      [36m          volumes:[0m
      [36m          - name: ${DATABASE_SERVICE_NAME}-data[0m
      [36m            persistentVolumeClaim:[0m
      [36m              claimName: ${DATABASE_SERVICE_NAME}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - redis[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: redis:${REDIS_VERSION}[0m
      [36m            namespace: ${NAMESPACE}[0m
      [36m          lastTriggeredImage: ""[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m    status: {}[0m
      [36m  parameters:[0m
      [36m  - description: Maximum amount of memory the container can use.[0m
      [36m    displayName: Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    required: true[0m
      [36m    value: 512Mi[0m
      [36m  - description: The OpenShift Namespace where the ImageStream resides.[0m
      [36m    displayName: Namespace[0m
      [36m    name: NAMESPACE[0m
      [36m    value: openshift[0m
      [36m  - description: The name of the OpenShift Service exposed for the database.[0m
      [36m    displayName: Database Service Name[0m
      [36m    name: DATABASE_SERVICE_NAME[0m
      [36m    required: true[0m
      [36m    value: redis[0m
      [36m  - description: Password for the Redis connection user.[0m
      [36m    displayName: Redis Connection Password[0m
      [36m    from: '[a-zA-Z0-9]{16}'[0m
      [36m    generate: expression[0m
      [36m    name: REDIS_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Volume space available for data, e.g. 512Mi, 2Gi.[0m
      [36m    displayName: Volume Capacity[0m
      [36m    name: VOLUME_CAPACITY[0m
      [36m    required: true[0m
      [36m    value: 1Gi[0m
      [36m  - description: Version of Redis image to be used (3.2 or latest).[0m
      [36m    displayName: Version of Redis Image[0m
      [36m    name: REDIS_VERSION[0m
      [36m    required: true[0m
      [36m    value: "3.2"[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: rhdm70-kieserver-https-s2i[0m
      [36m    xpaas: 1.4.8[0m
      [36m  message: A new Decision Manager Execution Server application has been created in[0m
      [36m    your project. Please be sure to create the "kieserver-service-account" service[0m
      [36m    account and the secret named "${HTTPS_SECRET}" containing the ${HTTPS_KEYSTORE}[0m
      [36m    file used for serving secure content. The username/password for accessing the[0m
      [36m    KIE Server REST interface is ${KIE_SERVER_USER}/${KIE_SERVER_PWD}.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: Application template for Red Hat Decision Manager Execution Server[0m
      [36m        7.0 application built using S2I.[0m
      [36m      iconClass: icon-decisionserver[0m
      [36m      openshift.io/display-name: Red Hat Decision Manager Execution Server 7.0 S2I[0m
      [36m        (Ephemeral with https)[0m
      [36m      tags: rhdm,jboss,xpaas[0m
      [36m      version: 1.4.8[0m
      [36m    creationTimestamp: 2018-04-03T15:33:59Z[0m
      [36m    name: rhdm70-kieserver-https-s2i[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "182782389"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/rhdm70-kieserver-https-s2i[0m
      [36m    uid: 6dd639d0-3754-11e8-b5b4-0a0ddbb52ad4[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The execution server web server's http port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-kieserver[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The execution server web server's https port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-kieserver[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-kieserver-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for execution server's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      host: ${EXECUTION_SERVER_HOSTNAME_HTTP}[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}-kieserver[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-kieserver-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for execution server's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      host: ${EXECUTION_SERVER_HOSTNAME_HTTPS}[0m
      [36m      tls:[0m
      [36m        termination: passthrough[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}-kieserver[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: ImageStream[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-kieserver[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: BuildConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      output:[0m
      [36m        to:[0m
      [36m          kind: ImageStreamTag[0m
      [36m          name: ${APPLICATION_NAME}-kieserver:latest[0m
      [36m      source:[0m
      [36m        contextDir: ${CONTEXT_DIR}[0m
      [36m        git:[0m
      [36m          ref: ${SOURCE_REPOSITORY_REF}[0m
      [36m          uri: ${SOURCE_REPOSITORY_URL}[0m
      [36m        type: Git[0m
      [36m      strategy:[0m
      [36m        sourceStrategy:[0m
      [36m          env:[0m
      [36m          - name: KIE_SERVER_CONTAINER_DEPLOYMENT[0m
      [36m            value: ${KIE_SERVER_CONTAINER_DEPLOYMENT}[0m
      [36m          - name: MAVEN_MIRROR_URL[0m
      [36m            value: ${MAVEN_MIRROR_URL}[0m
      [36m          - name: ARTIFACT_DIR[0m
      [36m            value: ${ARTIFACT_DIR}[0m
      [36m          forcePull: true[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: rhdm70-kieserver-openshift:1.0[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: Source[0m
      [36m      triggers:[0m
      [36m      - github:[0m
      [36m          secret: ${GITHUB_WEBHOOK_SECRET}[0m
      [36m        type: GitHub[0m
      [36m      - generic:[0m
      [36m          secret: ${GENERIC_WEBHOOK_SECRET}[0m
      [36m        type: Generic[0m
      [36m      - imageChange: {}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-kieserver[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}-kieserver[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}-kieserver[0m
      [36m          name: ${APPLICATION_NAME}-kieserver[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DROOLS_SERVER_FILTER_CLASSES[0m
      [36m              value: ${DROOLS_SERVER_FILTER_CLASSES}[0m
      [36m            - name: KIE_ADMIN_PWD[0m
      [36m              value: ${KIE_ADMIN_PWD}[0m
      [36m            - name: KIE_ADMIN_USER[0m
      [36m              value: ${KIE_ADMIN_USER}[0m
      [36m            - name: KIE_MBEANS[0m
      [36m              value: ${KIE_MBEANS}[0m
      [36m            - name: KIE_SERVER_BYPASS_AUTH_USER[0m
      [36m              value: ${KIE_SERVER_BYPASS_AUTH_USER}[0m
      [36m            - name: KIE_SERVER_ID[0m
      [36m              value: ${KIE_SERVER_ID}[0m
      [36m            - name: KIE_SERVER_HOST[0m
      [36m              valueFrom:[0m
      [36m                fieldRef:[0m
      [36m                  fieldPath: status.podIP[0m
      [36m            - name: KIE_SERVER_CONTAINER_DEPLOYMENT[0m
      [36m              value: ${KIE_SERVER_CONTAINER_DEPLOYMENT}[0m
      [36m            - name: KIE_SERVER_PWD[0m
      [36m              value: ${KIE_SERVER_PWD}[0m
      [36m            - name: KIE_SERVER_USER[0m
      [36m              value: ${KIE_SERVER_USER}[0m
      [36m            - name: MAVEN_REPO_URL[0m
      [36m              value: ${MAVEN_REPO_URL}[0m
      [36m            - name: MAVEN_REPO_USERNAME[0m
      [36m              value: ${MAVEN_REPO_USERNAME}[0m
      [36m            - name: MAVEN_REPO_PASSWORD[0m
      [36m              value: ${MAVEN_REPO_PASSWORD}[0m
      [36m            - name: HTTPS_KEYSTORE_DIR[0m
      [36m              value: /etc/kieserver-secret-volume[0m
      [36m            - name: HTTPS_KEYSTORE[0m
      [36m              value: ${HTTPS_KEYSTORE}[0m
      [36m            - name: HTTPS_NAME[0m
      [36m              value: ${HTTPS_NAME}[0m
      [36m            - name: HTTPS_PASSWORD[0m
      [36m              value: ${HTTPS_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}-kieserver[0m
      [36m            imagePullPolicy: Always[0m
      [36m            livenessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - /opt/eap/bin/livenessProbe.sh[0m
      [36m            name: ${APPLICATION_NAME}-kieserver[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - /opt/eap/bin/readinessProbe.sh[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/kieserver-secret-volume[0m
      [36m              name: kieserver-keystore-volume[0m
      [36m              readOnly: true[0m
      [36m          serviceAccountName: kieserver-service-account[0m
      [36m          terminationGracePeriodSeconds: 60[0m
      [36m          volumes:[0m
      [36m          - name: kieserver-keystore-volume[0m
      [36m            secret:[0m
      [36m              secretName: ${HTTPS_SECRET}[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}-kieserver[0m
      [36m          from:[0m
      [36m            kind: ImageStream[0m
      [36m            name: ${APPLICATION_NAME}-kieserver[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: myapp[0m
      [36m  - description: EAP administrator username[0m
      [36m    displayName: EAP Admin User[0m
      [36m    name: ADMIN_USERNAME[0m
      [36m    value: eapadmin[0m
      [36m  - description: EAP administrator password[0m
      [36m    displayName: EAP Admin Password[0m
      [36m    from: '[a-zA-Z]{6}[0-9]{1}!'[0m
      [36m    generate: expression[0m
      [36m    name: ADMIN_PASSWORD[0m
      [36m  - description: KIE administrator username[0m
      [36m    displayName: KIE Admin User[0m
      [36m    name: KIE_ADMIN_USER[0m
      [36m    value: adminUser[0m
      [36m  - description: KIE administrator password[0m
      [36m    displayName: KIE Admin Password[0m
      [36m    from: '[a-zA-Z]{6}[0-9]{1}!'[0m
      [36m    generate: expression[0m
      [36m    name: KIE_ADMIN_PWD[0m
      [36m  - description: KIE execution server username (Sets the org.kie.server.user system[0m
      [36m      property)[0m
      [36m    displayName: KIE Server User[0m
      [36m    name: KIE_SERVER_USER[0m
      [36m    value: executionUser[0m
      [36m  - description: KIE execution server password (Sets the org.kie.server.pwd system[0m
      [36m      property)[0m
      [36m    displayName: KIE Server Password[0m
      [36m    from: '[a-zA-Z]{6}[0-9]{1}!'[0m
      [36m    generate: expression[0m
      [36m    name: KIE_SERVER_PWD[0m
      [36m  - description: Decision server identifier. Determines the template ID in Decision[0m
      [36m      Central or controller. If this parameter is left blank, it is set using the[0m
      [36m      $HOSTNAME environment variable or a random value. (Sets the org.kie.server.id[0m
      [36m      system property).[0m
      [36m    displayName: KIE Server ID[0m
      [36m    name: KIE_SERVER_ID[0m
      [36m  - description: KIE execution server bypass auth user (Sets the org.kie.server.bypass.auth.user[0m
      [36m      system property)[0m
      [36m    displayName: KIE Server Bypass Auth User[0m
      [36m    name: KIE_SERVER_BYPASS_AUTH_USER[0m
      [36m    value: "false"[0m
      [36m  - description: KIE execution server mbeans enabled/disabled (Sets the kie.mbeans[0m
      [36m      and kie.scanner.mbeans system properties)[0m
      [36m    displayName: KIE MBeans[0m
      [36m    name: KIE_MBEANS[0m
      [36m    value: enabled[0m
      [36m  - description: KIE execution server class filtering (Sets the org.drools.server.filter.classes[0m
      [36m      system property)[0m
      [36m    displayName: Drools Server Filter Classes[0m
      [36m    name: DROOLS_SERVER_FILTER_CLASSES[0m
      [36m    value: "true"[0m
      [36m  - description: 'Custom hostname for http service route.  Leave blank for default[0m
      [36m      hostname, e.g.: <application-name>-execserv-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Execution Server Custom http Route Hostname[0m
      [36m    name: EXECUTION_SERVER_HOSTNAME_HTTP[0m
      [36m  - description: 'Custom hostname for https service route.  Leave blank for default[0m
      [36m      hostname, e.g.: secure-<application-name>-execserv-<project>.<default-domain-suffix>'[0m
      [36m    displayName: Execution Server Custom https Route Hostname[0m
      [36m    name: EXECUTION_SERVER_HOSTNAME_HTTPS[0m
      [36m  - description: The name of the secret containing the keystore file[0m
      [36m    displayName: Server Keystore Secret Name[0m
      [36m    name: HTTPS_SECRET[0m
      [36m    value: kieserver-app-secret[0m
      [36m  - description: The name of the keystore file within the secret[0m
      [36m    displayName: Server Keystore Filename[0m
      [36m    name: HTTPS_KEYSTORE[0m
      [36m    value: keystore.jks[0m
      [36m  - description: The name associated with the server certificate[0m
      [36m    displayName: Server Certificate Name[0m
      [36m    name: HTTPS_NAME[0m
      [36m    value: jboss[0m
      [36m  - description: The password for the keystore and certificate[0m
      [36m    displayName: Server Keystore Password[0m
      [36m    name: HTTPS_PASSWORD[0m
      [36m    value: mykeystorepass[0m
      [36m  - description: 'KIE Server Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2'[0m
      [36m    displayName: KIE Server Container Deployment[0m
      [36m    name: KIE_SERVER_CONTAINER_DEPLOYMENT[0m
      [36m    value: rhdm-kieserver-hellorules=org.openshift.quickstarts:rhdm-kieserver-hellorules:1.4.8.Final[0m
      [36m  - description: Git source URI for application[0m
      [36m    displayName: Git Repository URL[0m
      [36m    name: SOURCE_REPOSITORY_URL[0m
      [36m    required: true[0m
      [36m    value: https://github.com/jboss-container-images/rhdm-7-openshift-image.git[0m
      [36m  - description: Git branch/tag reference[0m
      [36m    displayName: Git Reference[0m
      [36m    name: SOURCE_REPOSITORY_REF[0m
      [36m    value: ose-v1.4.8-1[0m
      [36m  - description: Path within Git project to build; empty for root project directory.[0m
      [36m    displayName: Context Directory[0m
      [36m    name: CONTEXT_DIR[0m
      [36m    value: quickstarts/hello-rules/hellorules[0m
      [36m  - description: GitHub trigger secret[0m
      [36m    displayName: Github Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GITHUB_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Generic build trigger secret[0m
      [36m    displayName: Generic Webhook Secret[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: GENERIC_WEBHOOK_SECRET[0m
      [36m    required: true[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: Maven mirror to use for S2I builds[0m
      [36m    displayName: Maven mirror URL[0m
      [36m    name: MAVEN_MIRROR_URL[0m
      [36m  - description: Fully qualified URL to a Maven repository.[0m
      [36m    displayName: Maven repository URL[0m
      [36m    name: MAVEN_REPO_URL[0m
      [36m  - description: Username to access the Maven repository.[0m
      [36m    displayName: Maven repository username[0m
      [36m    name: MAVEN_REPO_USERNAME[0m
      [36m  - description: Password to access the Maven repository.[0m
      [36m    displayName: Maven repository password[0m
      [36m    name: MAVEN_REPO_PASSWORD[0m
      [36m  - description: List of directories from which archives will be copied into the deployment[0m
      [36m      folder. If unspecified, all archives in /target will be copied.[0m
      [36m    name: ARTIFACT_DIR[0m
      [36m- apiVersion: template.openshift.io/v1[0m
      [36m  kind: Template[0m
      [36m  labels:[0m
      [36m    template: sso72-x509-https[0m
      [36m    xpaas: 1.4.11[0m
      [36m  message: A new RH-SSO service has been created in your project. The admin username/password[0m
      [36m    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.[0m
      [36m    The HTTPS keystore used for serving secure content, the JGroups keystore used[0m
      [36m    for securing JGroups communications, and server truststore used for securing RH-SSO[0m
      [36m    requests were automatically created via OpenShift's service serving x509 certificate[0m
      [36m    secrets.[0m
      [36m  metadata:[0m
      [36m    annotations:[0m
      [36m      description: An example RH-SSO 7 application. For more information about using[0m
      [36m        this template, see https://github.com/jboss-openshift/application-templates.[0m
      [36m      iconClass: icon-sso[0m
      [36m      openshift.io/display-name: Red Hat Single Sign-On 7.2 (Ephemeral)[0m
      [36m      openshift.io/provider-display-name: Red Hat, Inc.[0m
      [36m      tags: sso,keycloak,jboss[0m
      [36m      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/[0m
      [36m      template.openshift.io/long-description: This template defines resources needed[0m
      [36m        to develop Red Hat Single Sign-On 7.2 server based deployment, securing RH-SSO[0m
      [36m        communication using re-encrypt TLS.[0m
      [36m      template.openshift.io/support-url: https://access.redhat.com[0m
      [36m      version: 1.4.11[0m
      [36m    creationTimestamp: 2018-05-23T16:21:37Z[0m
      [36m    name: sso72-x509-https[0m
      [36m    namespace: openshift[0m
      [36m    resourceVersion: "221898474"[0m
      [36m    selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/sso72-x509-https[0m
      [36m    uid: 5e12dc78-5ea5-11e8-bbcf-0ac586c2eb16[0m
      [36m  objects:[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's http port.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8080[0m
      [36m        targetPort: 8080[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The web server's https port.[0m
      [36m        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      ports:[0m
      [36m      - port: 8443[0m
      [36m        targetPort: 8443[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: Service[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: The JGroups ping port for clustering.[0m
      [36m        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"[0m
      [36m        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}-ping[0m
      [36m    spec:[0m
      [36m      clusterIP: None[0m
      [36m      ports:[0m
      [36m      - name: ping[0m
      [36m        port: 8888[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-http[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's http service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      to:[0m
      [36m        name: ${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    id: ${APPLICATION_NAME}-https[0m
      [36m    kind: Route[0m
      [36m    metadata:[0m
      [36m      annotations:[0m
      [36m        description: Route for application's https service.[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: secure-${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      tls:[0m
      [36m        termination: reencrypt[0m
      [36m      to:[0m
      [36m        name: secure-${APPLICATION_NAME}[0m
      [36m  - apiVersion: v1[0m
      [36m    kind: DeploymentConfig[0m
      [36m    metadata:[0m
      [36m      labels:[0m
      [36m        application: ${APPLICATION_NAME}[0m
      [36m      name: ${APPLICATION_NAME}[0m
      [36m    spec:[0m
      [36m      replicas: 1[0m
      [36m      selector:[0m
      [36m        deploymentConfig: ${APPLICATION_NAME}[0m
      [36m      strategy:[0m
      [36m        type: Recreate[0m
      [36m      template:[0m
      [36m        metadata:[0m
      [36m          labels:[0m
      [36m            application: ${APPLICATION_NAME}[0m
      [36m            deploymentConfig: ${APPLICATION_NAME}[0m
      [36m          name: ${APPLICATION_NAME}[0m
      [36m        spec:[0m
      [36m          containers:[0m
      [36m          - env:[0m
      [36m            - name: DB_MIN_POOL_SIZE[0m
      [36m              value: ${DB_MIN_POOL_SIZE}[0m
      [36m            - name: DB_MAX_POOL_SIZE[0m
      [36m              value: ${DB_MAX_POOL_SIZE}[0m
      [36m            - name: DB_TX_ISOLATION[0m
      [36m              value: ${DB_TX_ISOLATION}[0m
      [36m            - name: JGROUPS_PING_PROTOCOL[0m
      [36m              value: openshift.DNS_PING[0m
      [36m            - name: OPENSHIFT_DNS_PING_SERVICE_NAME[0m
      [36m              value: ${APPLICATION_NAME}-ping[0m
      [36m            - name: OPENSHIFT_DNS_PING_SERVICE_PORT[0m
      [36m              value: "8888"[0m
      [36m            - name: X509_CA_BUNDLE[0m
      [36m              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt[0m
      [36m            - name: JGROUPS_CLUSTER_PASSWORD[0m
      [36m              value: ${JGROUPS_CLUSTER_PASSWORD}[0m
      [36m            - name: SSO_ADMIN_USERNAME[0m
      [36m              value: ${SSO_ADMIN_USERNAME}[0m
      [36m            - name: SSO_ADMIN_PASSWORD[0m
      [36m              value: ${SSO_ADMIN_PASSWORD}[0m
      [36m            - name: SSO_REALM[0m
      [36m              value: ${SSO_REALM}[0m
      [36m            - name: SSO_SERVICE_USERNAME[0m
      [36m              value: ${SSO_SERVICE_USERNAME}[0m
      [36m            - name: SSO_SERVICE_PASSWORD[0m
      [36m              value: ${SSO_SERVICE_PASSWORD}[0m
      [36m            image: ${APPLICATION_NAME}[0m
      [36m            imagePullPolicy: Always[0m
      [36m            livenessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - /opt/eap/bin/livenessProbe.sh[0m
      [36m              initialDelaySeconds: 60[0m
      [36m            name: ${APPLICATION_NAME}[0m
      [36m            ports:[0m
      [36m            - containerPort: 8778[0m
      [36m              name: jolokia[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8080[0m
      [36m              name: http[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8443[0m
      [36m              name: https[0m
      [36m              protocol: TCP[0m
      [36m            - containerPort: 8888[0m
      [36m              name: ping[0m
      [36m              protocol: TCP[0m
      [36m            readinessProbe:[0m
      [36m              exec:[0m
      [36m                command:[0m
      [36m                - /bin/bash[0m
      [36m                - -c[0m
      [36m                - /opt/eap/bin/readinessProbe.sh[0m
      [36m            resources:[0m
      [36m              limits:[0m
      [36m                memory: ${MEMORY_LIMIT}[0m
      [36m            volumeMounts:[0m
      [36m            - mountPath: /etc/x509/https[0m
      [36m              name: sso-x509-https-volume[0m
      [36m              readOnly: true[0m
      [36m            - mountPath: /etc/x509/jgroups[0m
      [36m              name: sso-x509-jgroups-volume[0m
      [36m              readOnly: true[0m
      [36m          terminationGracePeriodSeconds: 75[0m
      [36m          volumes:[0m
      [36m          - name: sso-x509-https-volume[0m
      [36m            secret:[0m
      [36m              secretName: sso-x509-https-secret[0m
      [36m          - name: sso-x509-jgroups-volume[0m
      [36m            secret:[0m
      [36m              secretName: sso-x509-jgroups-secret[0m
      [36m      triggers:[0m
      [36m      - imageChangeParams:[0m
      [36m          automatic: true[0m
      [36m          containerNames:[0m
      [36m          - ${APPLICATION_NAME}[0m
      [36m          from:[0m
      [36m            kind: ImageStreamTag[0m
      [36m            name: redhat-sso72-openshift:1.1[0m
      [36m            namespace: ${IMAGE_STREAM_NAMESPACE}[0m
      [36m        type: ImageChange[0m
      [36m      - type: ConfigChange[0m
      [36m  parameters:[0m
      [36m  - description: The name for the application.[0m
      [36m    displayName: Application Name[0m
      [36m    name: APPLICATION_NAME[0m
      [36m    required: true[0m
      [36m    value: sso[0m
      [36m  - description: The password for the JGroups cluster.[0m
      [36m    displayName: JGroups Cluster Password[0m
      [36m    from: '[a-zA-Z0-9]{32}'[0m
      [36m    generate: expression[0m
      [36m    name: JGROUPS_CLUSTER_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Sets xa-pool/min-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Minimum Pool Size[0m
      [36m    name: DB_MIN_POOL_SIZE[0m
      [36m  - description: Sets xa-pool/max-pool-size for the configured datasource.[0m
      [36m    displayName: Datasource Maximum Pool Size[0m
      [36m    name: DB_MAX_POOL_SIZE[0m
      [36m  - description: Sets transaction-isolation for the configured datasource.[0m
      [36m    displayName: Datasource Transaction Isolation[0m
      [36m    name: DB_TX_ISOLATION[0m
      [36m  - description: Namespace in which the ImageStreams for Red Hat Middleware images[0m
      [36m      are installed. These ImageStreams are normally installed in the openshift namespace.[0m
      [36m      You should only need to modify this if you've installed the ImageStreams in[0m
      [36m      a different namespace/project.[0m
      [36m    displayName: ImageStream Namespace[0m
      [36m    name: IMAGE_STREAM_NAMESPACE[0m
      [36m    required: true[0m
      [36m    value: openshift[0m
      [36m  - description: RH-SSO Server administrator username[0m
      [36m    displayName: RH-SSO Administrator Username[0m
      [36m    from: '[a-zA-Z0-9]{8}'[0m
      [36m    generate: expression[0m
      [36m    name: SSO_ADMIN_USERNAME[0m
      [36m    required: true[0m
      [36m  - description: RH-SSO Server admininistrator password[0m
      [36m    displayName: RH-SSO Administrator Password[0m
      [36m    from: '[a-zA-Z0-9]{32}'[0m
      [36m    generate: expression[0m
      [36m    name: SSO_ADMIN_PASSWORD[0m
      [36m    required: true[0m
      [36m  - description: Realm to be created in the RH-SSO server (e.g. demorealm).[0m
      [36m    displayName: RH-SSO Realm[0m
      [36m    name: SSO_REALM[0m
      [36m  - description: The username used to access the RH-SSO service. This is used by clients[0m
      [36m      to create the appliction client(s) within the specified RH-SSO realm.[0m
      [36m    displayName: RH-SSO Service Username[0m
      [36m    name: SSO_SERVICE_USERNAME[0m
      [36m  - description: The password for the RH-SSO service user.[0m
      [36m    displayName: RH-SSO Service Password[0m
      [36m    name: SSO_SERVICE_PASSWORD[0m
      [36m  - description: Container memory limit.[0m
      [36m    displayName: Container Memory Limit[0m
      [36m    name: MEMORY_LIMIT[0m
      [36m    value: 1Gi[0m
      [36mkind: List[0m
      [36mmetadata:[0m
      [36m  resourceVersion: ""[0m
      [36m  selfLink: ""[0m
      [36m[0m[0m
      [36m[33m[09:45:15] INFO> Exit Status: 0[0m[0m
      | [36mresource[0m[0m |[0m [36mtemplate [0m[0m |[0m
      | [36mn       [0m[0m |[0m [36mopenshift[0m[0m |[0m
      | [36mo       [0m[0m |[0m [36myaml     [0m[0m |[0m
    [32mThen the step should [32m[1msucceed[0m[0m[32m[90m             # features/step_definitions/common.rb:4[0m[0m
      # make sure there's no extra templates
    [32mAnd [32m[1mthe[0m[0m[32m output should [32m[1mcontain[0m[0m[32m [32m[1m22[0m[0m[32m times:[90m  # features/step_definitions/common.rb:33[0m[0m
      | [36mkind: Template[0m[0m |[0m
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
waiting for operation up to 3600 seconds..
      [36m[33m[09:45:15] INFO> === After Scenario: Check online installed templates ===[0m[0m
      [36m[33m[09:45:15] INFO> cleaning-up user int1-yuwei-freeint001 projects[0m[0m
      [36m[33m[09:45:17] INFO> Shell Commands: rm -r -f -- /home/hugongai/workdir/dhcp-137-194-hugongai[0m[0m
      [36m[0m[0m
      [36m[33m[09:45:17] INFO> Exit Status: 0[0m[0m
      [36m[33m[09:45:17] INFO> === End After Scenario: Check online installed templates ===[0m[0m

1 scenario ([32m1 passed[0m)
6 steps ([32m6 passed[0m)
0m29.487s
[33m[09:45:17] INFO> === At Exit ===[0m
